{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import products from \"../products\"\n// import axios from \"axios\"\n\nimport { listProductDetails } from \"../actions/productAction\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\"; // props.match is the url in the react system\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  // const [product, setProduct] = useState({})\n  //  There are lots of limitation to useEffect, 1st argument is function, cannot use Async there, have to define one, then invoke it\n  //  for axios, response.data is the one we want \n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails); // state ---- reducer ---- loading, error, product\n\n  const {\n    loading,\n    error,\n    product\n  } = productDetails; // destruction a good way to extra data \n\n  useEffect(() => {\n    // const fetchProduct = async () => {const {data} = await axios.get(`/api/products/${match.params.id}`); setProduct(data)}\n    // fetchProduct();\n    dispatch(listProductDetails(match.params.id));\n  }, [match, dispatch]);\n  const [qty, setQty] = useState(0); // const product = products.find(product => product._id === match.params.id)\n\n  const addToCartHandler = e => {\n    history.push();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      classNmae: \"btn btn-light my-3\",\n      to: \"/\",\n      children: \" Go Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", product.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: $\", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\" \", product.price, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: qty,\n                    onChange: e => {\n                      setQty(e.target.value);\n                    },\n                    children: [...Array(product.countInStock).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: num + 1,\n                      children: num + 1\n                    }, num + 1, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 63\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block\",\n                type: \"button\",\n                disabled: product.countInStock === 0,\n                onclick: addToCartHandler,\n                children: \"Add to cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductScreen, \"+5jVAg3dPzZNp8XWTHR66i8HTbg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen; // The match object in router case\n// import is more like file path\n// to is url\n// In react, when you talk about src, it means something in the public folder\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Image","ListGroup","Card","Button","Form","Rating","useDispatch","useSelector","listProductDetails","Message","Loader","ProductScreen","history","match","dispatch","productDetails","state","loading","error","product","params","id","qty","setQty","addToCartHandler","e","push","image","name","rating","numReviews","price","description","countInStock","target","value","Array","keys","map","num"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Row, Col, Image, ListGroup, Card, Button, Form} from \"react-bootstrap\"\nimport Rating from \"../components/Rating\"\nimport {useDispatch, useSelector} from \"react-redux\"\n// import products from \"../products\"\n// import axios from \"axios\"\nimport {listProductDetails} from \"../actions/productAction\"\nimport Message from  \"../components/Message\"\nimport Loader from  \"../components/Loader\"\n\n// props.match is the url in the react system\nconst ProductScreen = ({history, match}) => {\n    // const [product, setProduct] = useState({})\n//  There are lots of limitation to useEffect, 1st argument is function, cannot use Async there, have to define one, then invoke it\n//  for axios, response.data is the one we want \n    const dispatch = useDispatch()\n    const productDetails = useSelector(state => state.productDetails)\n    // state ---- reducer ---- loading, error, product\n    const {loading, error, product} = productDetails // destruction a good way to extra data \n\n    useEffect( ()=> {\n        // const fetchProduct = async () => {const {data} = await axios.get(`/api/products/${match.params.id}`); setProduct(data)}\n        // fetchProduct();\n        dispatch(listProductDetails(match.params.id))\n    }, [match, dispatch])\n\n    const [qty, setQty] = useState(0)\n\n    // const product = products.find(product => product._id === match.params.id)\n\n    const addToCartHandler = (e) => {\n        history.push()\n    }\n\n    \n    return (\n        \n        <div>\n            <Link classNmae = \"btn btn-light my-3\" to=\"/\"> Go Back </Link>\n\n            {loading? <Loader/> : error? <Message variant=\"danger\"> {error} </Message> : (\n\n                <Row>\n                <Col md={6}>\n                    <Image src={product.image} alt={product.name} fluid/>\n                </Col>\n\n                <Col md={3}>\n                    <ListGroup variant = \"flush\"> \n                        <ListGroup.Item>\n                            <h3> {product.name} </h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Price: ${product.price}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Description: ${product.description}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                \n                <Col md={3}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item> \n                                <Row>\n                                    <Col>\n                                        Price:\n                                    </Col>\n                                    <Col>\n                                        <strong> {product.price} </strong>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item> \n                                <Row>\n                                    <Col>\n                                        Status:\n                                    </Col>\n                                    <Col>\n                                        {product.countInStock > 0? \"In Stock\" : \"Out of Stock\"}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {product.countInStock > 0 && (\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Qty</Col>\n                                        <Col> \n                                            <Form.Control as=\"select\" value={qty} onChange={(e)=>{setQty(e.target.value)}}> \n                                                {[...Array(product.countInStock).keys()].map(\n                                                    (num) => (<option key={num+1} value={num+1}> \n                                                            {num+1}\n                                                        </option>))}\n                                            </Form.Control>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            )}\n\n                            <ListGroup.Item>                           \n                                <Button \n                                className= \"btn-block\" \n                                type=\"button\" \n                                disabled={product.countInStock === 0}\n                                onclick = {addToCartHandler}\n                                >\n                                    Add to cart\n                                </Button> \n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n\n            )}\n    \n        </div>\n    )\n}\n\nexport default ProductScreen\n\n\n// The match object in router case\n// import is more like file path\n// to is url\n// In react, when you talk about src, it means something in the public folder"]},"metadata":{},"sourceType":"module"}
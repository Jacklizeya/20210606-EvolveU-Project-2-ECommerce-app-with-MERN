{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import products from \"../products\"\n// import axios from \"axios\"\n\nimport { listProductDetails, createProductReview } from \"../actions/productAction\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\"; // props.match is the url in the react system\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  // const [product, setProduct] = useState({})\n  //  There are lots of limitation to useEffect, 1st argument is function, cannot use Async there, have to define one, then invoke it\n  //  for axios, response.data is the one we want \n  const dispatch = useDispatch();\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const productDetails = useSelector(state => state.productDetails); // state ---- reducer ---- loading, error, product\n\n  const {\n    loading,\n    error,\n    product\n  } = productDetails; // destruction a good way to extra data \n\n  const productReviewCreate = useSelector(state => state.productReviewCreate); // state ---- reducer ---- loading, error, product\n\n  const {\n    success: successProductReview,\n    error: errorProductReview\n  } = productReviewCreate; // destruction a good way to extra data \n\n  const userLogin = useSelector(state => state.userLogin); // state ---- reducer ---- loading, error, product\n\n  const {\n    userInfo\n  } = userLogin; // destruction a good way to extra data \n\n  useEffect(() => {\n    // const fetchProduct = async () => {const {data} = await axios.get(`/api/products/${match.params.id}`); setProduct(data)}\n    // fetchProduct();\n    dispatch(listProductDetails(match.params.id));\n  }, [match, dispatch]); // const product = products.find(product => product._id === match.params.id)\n\n  const addToCartHandler = () => {\n    console.log(\"start Redirecting to cart page\");\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-light my-3\",\n      to: \"/\",\n      children: \" Go Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: product.image,\n            alt: product.name,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", product.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: product.rating,\n                text: `${product.numReviews} reviews`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Price: $\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Description: $\", product.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\" \", product.price, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Qty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: qty,\n                      onChange: e => {\n                        console.log(\"change\");\n                        setQty(Number(e.target.value));\n                      },\n                      children: [...Array(product.countInStock).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: num + 1,\n                        children: num + 1\n                      }, num + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 63\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-block\",\n                  type: \"button\",\n                  disabled: product.countInStock === 0,\n                  onClick: addToCartHandler,\n                  children: \"Add to cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Reviews \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), product.reviews.length === 0 && /*#__PURE__*/_jsxDEV(Message, {\n            children: \" No Reviews \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [product.reviews.map(review => {\n              /*#__PURE__*/\n              _jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\" \", review.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Rating, {\n                  value: review.rating,\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", review.createdAt.substring(0, 10), \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", review.comment, \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 45\n                }, this)]\n              }, review._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 41\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \" Write a customer review \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductScreen, \"tvXy7oIr1ma4i2YFEKS6prsboXs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen; // The match object in router case\n// import is more like file path\n// to is url\n// In react, when you talk about src, it means something in the public folder\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Image","ListGroup","Card","Button","Form","Rating","useDispatch","useSelector","listProductDetails","createProductReview","Message","Loader","PRODUCT_CREATE_REVIEW_RESET","ProductScreen","history","match","dispatch","qty","setQty","rating","setRating","comment","setComment","productDetails","state","loading","error","product","productReviewCreate","success","successProductReview","errorProductReview","userLogin","userInfo","params","id","addToCartHandler","console","log","push","image","name","numReviews","price","description","countInStock","e","Number","target","value","Array","keys","map","num","reviews","length","review","createdAt","substring","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Row, Col, Image, ListGroup, Card, Button, Form} from \"react-bootstrap\"\nimport Rating from \"../components/Rating\"\nimport {useDispatch, useSelector} from \"react-redux\"\n// import products from \"../products\"\n// import axios from \"axios\"\nimport {listProductDetails, createProductReview} from \"../actions/productAction\"\nimport Message from  \"../components/Message\"\nimport Loader from  \"../components/Loader\"\nimport {PRODUCT_CREATE_REVIEW_RESET} from \"../constants/productConstants\"\n\n// props.match is the url in the react system\nconst ProductScreen = ({history, match}) => {\n    // const [product, setProduct] = useState({})\n//  There are lots of limitation to useEffect, 1st argument is function, cannot use Async there, have to define one, then invoke it\n//  for axios, response.data is the one we want \n    const dispatch = useDispatch()\n\n\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState(\"\")\n\n    const productDetails = useSelector(state => state.productDetails)\n    // state ---- reducer ---- loading, error, product\n    const {loading, error, product} = productDetails // destruction a good way to extra data \n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    // state ---- reducer ---- loading, error, product\n    const {success: successProductReview, error: errorProductReview, } = productReviewCreate // destruction a good way to extra data \n\n    const userLogin = useSelector(state => state.userLogin)\n    // state ---- reducer ---- loading, error, product\n    const { userInfo } = userLogin // destruction a good way to extra data \n\n    useEffect( ()=> {\n        // const fetchProduct = async () => {const {data} = await axios.get(`/api/products/${match.params.id}`); setProduct(data)}\n        // fetchProduct();\n        dispatch(listProductDetails(match.params.id))\n    }, [match, dispatch])\n\n    // const product = products.find(product => product._id === match.params.id)\n\n    const addToCartHandler = () => {\n        console.log(\"start Redirecting to cart page\")\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    \n    return (\n        \n        <div>\n            <Link className = \"btn btn-light my-3\" to=\"/\"> Go Back </Link>\n\n            {loading? <Loader/> : error? <Message variant=\"danger\"> {error} </Message> : (\n                <>\n                <Row>\n                <Col md={6}>\n                    <Image src={product.image} alt={product.name} fluid/>\n                </Col>\n\n                <Col md={3}>\n                    <ListGroup variant = \"flush\"> \n                        <ListGroup.Item>\n                            <h3> {product.name} </h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Price: ${product.price}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Description: ${product.description}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                \n                <Col md={3}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item> \n                                <Row>\n                                    <Col>\n                                        Price:\n                                    </Col>\n                                    <Col>\n                                        <strong> {product.price} </strong>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item> \n                                <Row>\n                                    <Col>\n                                        Status:\n                                    </Col>\n                                    <Col>\n                                        {product.countInStock > 0? \"In Stock\" : \"Out of Stock\"}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {product.countInStock > 0 && (\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Qty</Col>\n                                        <Col> \n                                            <Form.Control as=\"select\" value={qty} onChange={(e)=>{console.log(\"change\"); setQty(Number(e.target.value))}}> \n                                                {[...Array(product.countInStock).keys()].map(\n                                                    (num) => (<option key={num+1} value={num+1}> \n                                                            {num+1}\n                                                        </option>))}\n                                            </Form.Control>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            )}\n\n                            <ListGroup.Item>                           \n                                <Button \n                                className= \"btn-block\" \n                                type=\"button\" \n                                disabled={product.countInStock === 0}\n                                onClick = {addToCartHandler}\n                                >\n                                    Add to cart\n                                </Button> \n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <h2> Reviews </h2>\n                    {product.reviews.length === 0 && <Message> No Reviews </Message>}      \n                    <ListGroup variant=\"flush\"> \n                            {product.reviews.map(review => {\n                                    (\n                                        <ListGroup.Item key={review._id}>\n                                            <strong> {review.name} </strong>\n                                            <Rating value={review.rating}> </Rating>\n                                            <p> {review.createdAt.substring(0, 10)}  </p>\n                                            <p> {review.comment}  </p>\n                                        </ListGroup.Item>\n                                    )\n                            })}\n                            <ListGroup.Item>\n                                <h2> Write a customer review </h2>\n                                {}\n                            </ListGroup.Item>\n                    </ListGroup>                              \n                </Col>\n            </Row>\n            </>\n            )}\n    \n        </div>\n    )\n}\n\nexport default ProductScreen\n\n\n// The match object in router case\n// import is more like file path\n// to is url\n// In react, when you talk about src, it means something in the public folder"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/3d2021store/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from\"react-router-dom\";import{Form,Button}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import{getUserDetails,updateUsers}from\"../actions/userAction\";import FormContainer from\"../components/FormContainer\";import{USER_UPDATE_PROFILE_RESET}from\"../constants/userConstant\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function UserEditScreen(_ref){var match=_ref.match,history=_ref.history;//  This is going to focus on using local state\nvar userId=match.params.id;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];// This is the main global state for this component: userDetails\nvar dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,errorUpdate=userUpdate.error,successUpdate=userUpdate.success;console.log(\"user\",user);//  this is side effect, something else needs to be updated too\nuseEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_PROFILE_RESET});history.push(\"/admin/Userlist\");}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));console.log(\"useEffect\",user);}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[user,dispatch,history,userId,successUpdate]);//  this is direct effect, dispatch update\nvar submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUsers({_id:userId,name:name,email:email,isAdmin:isAdmin}));};//  all stuff inside is the children\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",className:\"btn btn-light my-3\",children:\" Go Back \"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Edit User \"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{children:\" \"}),errorUpdate&&/*#__PURE__*/_jsxs(Message,{variant:\"danger\",children:[\" \",error.update,\" \"]}),loading?/*#__PURE__*/_jsx(Loader,{children:\" \"}):error?/*#__PURE__*/_jsxs(Message,{variant:\"danger\",children:[\" \",error,\" \"]}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\" Name \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\" Email Address \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isAdmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"isAdmin\",checked:isAdmin,onChange:function onChange(e){setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\" Update \"})]})]})]});}","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/3d2021store/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","getUserDetails","updateUsers","FormContainer","USER_UPDATE_PROFILE_RESET","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","console","log","type","push","_id","submitHandler","e","preventDefault","update","target","value","checked"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Form, Button} from \"react-bootstrap\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport {getUserDetails, updateUsers} from \"../actions/userAction\"\nimport FormContainer from \"../components/FormContainer\"\nimport {USER_UPDATE_PROFILE_RESET} from \"../constants/userConstant\"\n\nexport default function UserEditScreen( {match, history} ) {\n//  This is going to focus on using local state\n    const userId = match.params.id\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    // This is the main global state for this component: userDetails\n    const dispatch = useDispatch()\n    const userDetails = useSelector(state => state.userDetails)\n    const {loading, error, user} = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = userUpdate\n    console.log(\"user\", user)\n    \n//  this is side effect, something else needs to be updated too\n    useEffect(()=>{\n        if (successUpdate) {dispatch({type: USER_UPDATE_PROFILE_RESET}); history.push(\"/admin/Userlist\")} else {\n            if (! user.name || user._id !==userId ) \n            {dispatch(getUserDetails( userId )); console.log(\"useEffect\", user)} else {\n            setName(user.name)\n            setEmail(user.email)\n            setIsAdmin(user.isAdmin)}}\n    }, [user, dispatch, history, userId, successUpdate])\n\n//  this is direct effect, dispatch update\n    const submitHandler = (e) => {\n        e.preventDefault()       \n        dispatch(updateUsers({_id: userId, name, email, isAdmin}))\n    }\n\n//  all stuff inside is the children\n    return (\n\n        <div>\n            \n            <Link to= \"/admin/userlist\" className=\"btn btn-light my-3\"> Go Back </Link>\n            <FormContainer>\n                 <h1> Edit User </h1>\n                {loadingUpdate && <Loader> </Loader>}\n                {errorUpdate && <Message variant=\"danger\"> {error.update} </Message>}\n                {loading? <Loader> </Loader> : error?( <Message variant=\"danger\"> {error} </Message>) :  (\n\n                <Form onSubmit = {submitHandler} >\n\n                <Form.Group controlId=\"name\">\n                    <Form.Label> Name </Form.Label>\n                    <Form.Control type=\"name\" placeholder=\"Enter name\" value={name} onChange={(e)=>{setName(e.target.value)}}/> \n                </Form.Group> \n\n                <Form.Group controlId=\"email\">\n                    <Form.Label> Email Address </Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>{setEmail(e.target.value)}}/> \n                </Form.Group> \n\n                <Form.Group controlId=\"isAdmin\">\n                    <Form.Check type=\"checkbox\"  label=\"isAdmin\" checked={isAdmin} onChange={(e)=>{setIsAdmin(e.target.checked)}}/> \n                </Form.Group>  \n\n                <Button type=\"submit\" variant=\"primary\"> Update </Button>\n                </Form>\n            )}\n            \n\n            \n             </FormContainer>\n        </div>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}
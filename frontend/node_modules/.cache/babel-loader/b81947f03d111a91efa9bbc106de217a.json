{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      {\n        const item = action.payload; // this contains the information about what I want to buy\n        // this contains the information about what I have in the cart already\n\n        const existItem = state.cartItems.find(x => x.product === item.product); //          return the first item that matches the criteria\n\n        if (existItem) {\n          return { ...state,\n            cartItems: state.cartItems.map(x => x.product === item.product ? item : x)\n          }; // replace with payload or use the old one\n        } else {\n          return { ...state,\n            cartItems: [...state.cartItems, item]\n          };\n        }\n      }\n\n    case CART_REMOVE_ITEM:\n      {\n        return { ...state,\n          cartItems: state.cartItems.filter(x => x.product !== action.payload)\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      {\n        return { ...state,\n          cartItems: state.cartItems.filter(x => x.product !== action.payload)\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/reducers/cartReducer.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,QAA8C,4BAA9C;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAAT,EAA2BC,MAA3B,KAAsC;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AAAwB;AACpB,cAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB,CADoB,CACS;AAC7B;;AACA,cAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB,CAHoB,CAIhC;;AACY,YAAIH,SAAJ,EAAe;AACX,iBAAO,EAAC,GAAGN,KAAJ;AACHC,YAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAAnB,GAA4BL,IAA5B,GAAmCI,CAA5D;AADR,WAAP,CADW,CAEqE;AACnF,SAHD,MAGO;AAAC,iBAAO,EAAC,GAAGR,KAAJ;AAAWC,YAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAtB,WAAP;AAAyD;AAEpE;;AACD,SAAKN,gBAAL;AAAwB;AACpB,eAAO,EAAC,GAAGE,KAAJ;AAAWC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAAtB,SAAP;AACH;;AACD,SAAKP,gBAAL;AAAwB;AACpB,eAAO,EAAC,GAAGE,KAAJ;AAAWC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAAtB,SAAP;AACH;;AAID;AAAS,aAAOL,KAAP;AArBb;AA0BH,CA3BM","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM} from \"../constants/cartConstants\"\n\nexport const cartReducer = (state = {cartItems: []} , action) => {\n    switch(action.type) {\n        case CART_ADD_ITEM    : {\n            const item = action.payload  // this contains the information about what I want to buy\n            // this contains the information about what I have in the cart already\n            const existItem = state.cartItems.find(x => x.product === item.product)\n//          return the first item that matches the criteria\n            if (existItem) {\n                return {...state, \n                    cartItems: state.cartItems.map(x => x.product === item.product? item : x )} // replace with payload or use the old one\n            } else {return {...state, cartItems: [...state.cartItems, item]}}\n\n        }\n        case CART_REMOVE_ITEM : {\n            return {...state, cartItems: state.cartItems.filter(x => x.product !== action.payload)}\n        }\n        case CART_REMOVE_ITEM : {\n            return {...state, cartItems: state.cartItems.filter(x => x.product !== action.payload)}\n        }\n\n\n\n        default: return state\n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProductDetails } from \"../actions/productAction\";\nimport FormContainer from \"../components/FormContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductEditScreen({\n  match,\n  history\n}) {\n  _s();\n\n  //  This is going to focus on using local state\n  const productId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false); // This is the main global state for this component: productDetails\n\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  console.log(\"product\", product);\n  useEffect(() => {\n    if (successUpdate) {\n      history.push(\"/admin/Userlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n        console.log(\"useEffect\", product);\n      } else {\n        setName(product.name);\n        setEmail(product.email);\n        setIsAdmin(product.isAdmin);\n      }\n    }\n  }, [product, dispatch, history, productId, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      email,\n      isAdmin\n    }));\n  }; //  all stuff inside is the children\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \" Go Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Edit Product \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [\" \", error.update, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [\" \", error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 56\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Email Address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isAdmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"isAdmin\",\n            checked: isAdmin,\n            onChange: e => {\n              setIsAdmin(e.target.checked);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \" Update \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductEditScreen, \"uEKlNrRNBgK2rTbKlQw86xm7yzQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","listProductDetails","FormContainer","ProductEditScreen","match","history","productId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","console","log","push","_id","submitHandler","e","preventDefault","updateProduct","update","target","value","checked"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Form, Button} from \"react-bootstrap\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport {listProductDetails} from \"../actions/productAction\"\nimport FormContainer from \"../components/FormContainer\"\n\n\nexport default function ProductEditScreen( {match, history} ) {\n//  This is going to focus on using local state\n    const productId = match.params.id\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    // This is the main global state for this component: productDetails\n    const dispatch = useDispatch()\n    const productDetails = useSelector(state => state.productDetails)\n    const {loading, error, product} = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = productUpdate\n    console.log(\"product\", product)\n    \n\n    useEffect(()=>{\n        if (successUpdate) { history.push(\"/admin/Userlist\")} else {\n            if (! product.name || product._id !== productId ) \n            {dispatch(listProductDetails(productId)); console.log(\"useEffect\", product)} else {\n            setName(product.name)\n            setEmail(product.email)\n            setIsAdmin(product.isAdmin)}}\n    }, [product, dispatch, history, productId, successUpdate])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()       \n        dispatch(updateProduct({_id: productId, name, email, isAdmin}))\n    }\n\n//  all stuff inside is the children\n    return (\n\n        <div>\n            \n            <Link to= \"/admin/userlist\" className=\"btn btn-light my-3\"> Go Back </Link>\n            <FormContainer>\n                 <h1> Edit Product </h1>\n                {loadingUpdate && <Loader> </Loader>}\n                {errorUpdate && <Message variant=\"danger\"> {error.update} </Message>}\n                {loading? <Loader> </Loader> : error?( <Message variant=\"danger\"> {error} </Message>) :  (\n\n                <Form onSubmit = {submitHandler} >\n\n                <Form.Group controlId=\"name\">\n                    <Form.Label> Name </Form.Label>\n                    <Form.Control type=\"name\" placeholder=\"Enter name\" value={name} onChange={(e)=>{setName(e.target.value)}}/> \n                </Form.Group> \n\n                <Form.Group controlId=\"email\">\n                    <Form.Label> Email Address </Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>{setEmail(e.target.value)}}/> \n                </Form.Group> \n\n                <Form.Group controlId=\"isAdmin\">\n                    <Form.Check type=\"checkbox\"  label=\"isAdmin\" checked={isAdmin} onChange={(e)=>{setIsAdmin(e.target.checked)}}/> \n                </Form.Group>  \n\n                <Button type=\"submit\" variant=\"primary\"> Update </Button>\n                </Form>\n            )}\n            \n\n            \n             </FormContainer>\n        </div>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}
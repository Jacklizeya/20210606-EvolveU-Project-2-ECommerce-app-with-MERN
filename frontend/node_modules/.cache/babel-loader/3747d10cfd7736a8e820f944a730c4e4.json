{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { getOrderDetails, payOrder, deliverOrder } from \"../actions/orderAction\";\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from \"../constants/orderConstants\"; //                      This is a big mis-match, 20210520 one typo here\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderScreen({\n  match\n}) {\n  _s();\n\n  const orderId = match.params.id;\n  console.log(`orderId is ${orderId}`);\n  const [sdkReady, setSdkReady] = useState(false);\n  const {\n    order,\n    loading,\n    error\n  } = useSelector(state => state.orderDetails);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = useSelector(state => state.orderPay); //this is second bug for 20210520\n\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = useSelector(state => state.orderDeliver); //this is second bug for 20210520\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      console.log(\"order screen paypal api\");\n      const {\n        data: clientId\n      } = await axios(\"/api/config/paypal\"); // sdk is software development kit? Insert 3-rd party script into HTML\n\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.async = true;\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n      console.log(\"script is ready\");\n    };\n\n    console.log(`order is ${order}`);\n    console.log(`orderId is ${orderId}`); // if (!order || successPay || successDeliver) {\n\n    console.log(\"entering the dispatch section\");\n    dispatch({\n      type: ORDER_PAY_RESET\n    }); // IF you donot do this, it will not detect the delete  state change, then it won't re-render\n\n    dispatch({\n      type: ORDER_DELIVER_RESET\n    }); // \n\n    console.log(`going to dispatch ${orderId}`);\n    dispatch(getOrderDetails(orderId));\n\n    if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    } // } else if (!order.isPaid) {\n    //     console.log(\"entering elseif\")\n    //     \n    //  } \n\n  }, [// orderId, \n  // dispatch, \n  // successPay, \n  order, successDeliver]);\n\n  const successPaymentHanlder = paymentResult => {\n    console.log(\"paymentResult\", paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems.reduce((acc, item) => {\n      return Number(acc + item.price * item.qty);\n    }, 0);\n    order.shippingPrice = order.itemsPrice < 1000 ? Number((order.itemsPrice * 0.1).toFixed(2)) : 0;\n  }\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 18\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    children: [\" \", error, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 46\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Order \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Payment Method \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Method: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 32\n            }, this), order.paymentMethod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n            children: [\" Paid on \", order.paidAt, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(Message, {\n            children: \" Not Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Shipping \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), order.user && order.user.name, order.user && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `mailto:${order.user.email}`,\n            children: \"  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Address \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 41\n            }, this), order.shippingAddress.address, \", \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 66\n            }, this), order.shippingAddress.city, \",\", order.shippingAddress.postalCode, \",\", order.shippingAddress.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"success\",\n            children: [\" Delivered on \", order.deliveredAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: \" Not Delivered \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Order Items \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n            children: \" Your order is empty \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: order.orderItems.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 1,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 53\n                    }, this), item.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" x $\", item.price, \" = $\", (item.qty * item.price).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \" Order Summary \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" Items \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\" $\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" 10% Shipping Fee (free for items over $1000) \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\" $\", order.shippingPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" Tax \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\" $\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" Total \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\" $\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [loadingPay && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 56\n              }, this), !sdkReady ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 54\n              }, this) : /*#__PURE__*/_jsxDEV(PayPalButton, {\n                amount: order.totalPrice,\n                onSuccess: successPaymentHanlder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }, this), loadingDeliver && /*#__PURE__*/_jsxDEV(Loader, {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 52\n            }, this), userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                className: \"btn btn-block\",\n                onClick: deliverHandler,\n                children: \"Mark As Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n} // this <PayPal Button> must have some built-in like onClick = talk to paypal server\n// !!! WARNING: PayPalButton, not Paypal button\n// Here we only need to know on Success, it is going to pass us the paymentresult\n\n_s(OrderScreen, \"aZpmvOQOgYwsy/NZgDOrDNq4+FQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/OrderScreen.js"],"names":["React","useState","useEffect","axios","Row","Col","ListGroup","Image","Card","Button","Link","useDispatch","useSelector","PayPalButton","Loader","Message","getOrderDetails","payOrder","deliverOrder","ORDER_PAY_RESET","ORDER_DELIVER_RESET","OrderScreen","match","orderId","params","id","console","log","sdkReady","setSdkReady","order","loading","error","state","orderDetails","loadingPay","success","successPay","orderPay","loadingDeliver","successDeliver","orderDeliver","userLogin","userInfo","dispatch","addPayPalScript","data","clientId","script","document","createElement","type","async","src","onload","body","appendChild","isPaid","window","paypal","successPaymentHanlder","paymentResult","deliverHandler","itemsPrice","orderItems","reduce","acc","item","Number","price","qty","shippingPrice","toFixed","_id","paymentMethod","paidAt","user","name","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","length","map","index","image","product","taxPrice","totalPrice","isAdmin"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react'\nimport axios from \"axios\"\n\nimport {Row, Col, ListGroup, Image, Card, Button} from \"react-bootstrap\"\nimport {Link} from \"react-router-dom\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {PayPalButton} from \"react-paypal-button-v2\"\n\nimport Loader from \"../components/Loader\"\nimport Message from \"../components/Message\"\nimport {getOrderDetails, payOrder, deliverOrder} from \"../actions/orderAction\" \nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET} from \"../constants/orderConstants\"\n//                      This is a big mis-match, 20210520 one typo here\n\n\nexport default function OrderScreen({match}) {\n\n    const orderId = match.params.id\n    console.log(`orderId is ${orderId}`)\n    const [sdkReady, setSdkReady] = useState(false)\n    const {order, loading, error} = useSelector(state => state.orderDetails)\n    const { loading : loadingPay, success: successPay} = useSelector(state => state.orderPay)  //this is second bug for 20210520\n    const { loading: loadingDeliver, success: successDeliver} = useSelector(state => state.orderDeliver)  //this is second bug for 20210520\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const dispatch = useDispatch()\n\n    useEffect(()=>{ \n            const addPayPalScript = async() => {\n                console.log(\"order screen paypal api\")\n                const {data: clientId} = await axios(\"/api/config/paypal\")\n                // sdk is software development kit? Insert 3-rd party script into HTML\n                const script = document.createElement(\"script\")\n                script.type = \"text/javascript\"\n                script.async = true\n                script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n                script.onload = () => {setSdkReady(true)}\n                document.body.appendChild(script)\n                console.log(\"script is ready\")}\n\n            console.log(`order is ${order}`)\n            console.log(`orderId is ${orderId}`)\n\n            \n            \n            // if (!order || successPay || successDeliver) {\n            console.log(\"entering the dispatch section\")\n            dispatch({type: ORDER_PAY_RESET}) // IF you donot do this, it will not detect the delete  state change, then it won't re-render\n            dispatch({type: ORDER_DELIVER_RESET}) // \n            console.log(`going to dispatch ${orderId}`)\n            dispatch(getOrderDetails(orderId))\n\n            if (!order.isPaid) {if (!window.paypal) {addPayPalScript()} else {setSdkReady(true)}}\n            // } else if (!order.isPaid) {\n            //     console.log(\"entering elseif\")\n            //     \n            //  } \n            }, [\n                // orderId, \n                // dispatch, \n                // successPay, \n                order, \n                successDeliver\n                ])\n\n\n\n    const successPaymentHanlder = (paymentResult) => {\n        console.log(\"paymentResult\", paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        \n        dispatch(deliverOrder(order))\n    }\n\n    if (!loading && !error) {order.itemsPrice = order.orderItems.reduce((acc, item) => {return Number(acc + item.price * item.qty)}, 0)\n    order.shippingPrice = (order.itemsPrice < 1000 ? Number((order.itemsPrice * 0.1).toFixed(2)) : 0)}\n    \n\n\n    return (\n        loading? <Loader> </Loader> : error? <Message> {error} </Message> :\n        <div>\n        <h1> Order {order._id}</h1>\n            <Row>\n                    <Col md={8}>\n                        <ListGroup>\n                            <h2> Payment Method </h2>\n                            \n                            <p><strong> Method: </strong> \n                            {order.paymentMethod}</p>\n                            {order.isPaid?   <Message> Paid on {order.paidAt} </Message>  :  <Message> Not Paid</Message>  }\n                        \n                        </ListGroup>    \n\n\n                        <ListGroup variant=\"flush\">\n                            <h2> Shipping </h2>\n                            <strong> Name: </strong> \n                            {order.user && order.user.name}\n                            {order.user && <a href={`mailto:${order.user.email}`}>  </a>}\n                            \n                            <p> \n                                Address <br/>\n                                {order.shippingAddress.address}, <br/>\n                                {order.shippingAddress.city},  \n                                {order.shippingAddress.postalCode}, \n                                {order.shippingAddress.country} \n                            </p>\n                            {order.isDelivered? <Message variant=\"success\"> Delivered on {order.deliveredAt}</Message> : \n                            <Message variant=\"danger\"> Not Delivered </Message>}\n            \n                        </ListGroup>\n\n                                \n\n                        <ListGroup>\n                            <h2> Order Items </h2>\n                            {order.orderItems.length === 0 ? <Message> Your order is empty </Message> : (\n                                <ListGroup> \n                                    {order.orderItems.map((item, index)=>{return (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid />\n                                                </Col>\n                                                <Col >\n                                                    <Link to={`/product/${item.product}`}/>\n                                                    {item.name}\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col> \n                                            </Row>\n                                        </ListGroup.Item>\n                                    )})}\n                                </ListGroup>\n                            )}\n                        </ListGroup>   \n                    </Col>\n\n                    <Col md={4}>\n                        <Card>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h2> Order Summary </h2>\n                                </ListGroup.Item>\n                                \n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> Items </Col>\n                                        <Col> ${order.itemsPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            \n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> 10% Shipping Fee (free for items over $1000) </Col>\n                                        <Col> ${order.shippingPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> Tax </Col>\n                                        <Col> ${order.taxPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> Total </Col>\n                                        <Col> ${order.totalPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                {!order.isPaid && (\n                                    <ListGroup.Item>\n                                        {loadingPay && <Loader/>}\n                                        {!sdkReady ? <Loader/>  : (<PayPalButton amount={order.totalPrice} onSuccess = {successPaymentHanlder}/> )}\n                                    </ListGroup.Item>)\n                                }\n\n                                {loadingDeliver && <Loader> </Loader>}\n                                {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button type=\"button\" className = \"btn btn-block\" onClick={deliverHandler}>\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </ListGroup>                   \n                        </Card>                            \n                    </Col>\n                </Row>\n            </div>\n    )\n}\n\n// this <PayPal Button> must have some built-in like onClick = talk to paypal server\n// !!! WARNING: PayPalButton, not Paypal button\n// Here we only need to know on Success, it is going to pass us the paymentresult\n"]},"metadata":{},"sourceType":"module"}
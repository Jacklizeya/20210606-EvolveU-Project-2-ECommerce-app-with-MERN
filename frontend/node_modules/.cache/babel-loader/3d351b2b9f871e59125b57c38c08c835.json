{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer } from \"./reducers/userReducer\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from \"./reducers/orderReducer\";\nconst rootReducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n}); // This is from Cache\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {}; // The token is also stored here\n\nconst initalState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initalState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","rootReducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initalState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,EAA4BC,qBAA5B,QAAwD,2BAAxD;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA+CC,kBAA/C,EAAmEC,wBAAnE,EAA6FC,eAA7F,QAAmH,wBAAnH;AACA,SAAQC,kBAAR,EAA4BC,mBAA5B,EAAiDC,eAAjD,EAAkEC,kBAAlE,QAA2F,yBAA3F;AAEA,MAAMC,WAAW,GAAGhB,eAAe,CAAC;AAChCiB,EAAAA,WAAW,EAAEb,kBADmB;AAEhCc,EAAAA,cAAc,EAAEb,qBAFgB;AAGhCc,EAAAA,IAAI,EAAEb,WAH0B;AAIhCc,EAAAA,SAAS,EAAEb,gBAJqB;AAKhCc,EAAAA,YAAY,EAAEb,mBALkB;AAMhCc,EAAAA,WAAW,EAAEb,kBANmB;AAOhCc,EAAAA,iBAAiB,EAAEb,wBAPa;AAQhCc,EAAAA,WAAW,EAAEZ,kBARmB;AAShCa,EAAAA,YAAY,EAAEZ,mBATkB;AAUhCa,EAAAA,QAAQ,EAAEZ,eAVsB;AAWhCa,EAAAA,WAAW,EAAEZ;AAXmB,CAAD,CAAnC,C,CAeA;;AACA,MAAMa,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AACA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AACA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAnI,C,CACA;;AAGA,MAAMK,WAAW,GAAG;AAChBhB,EAAAA,IAAI,EAAE;AAACiB,IAAAA,SAAS,EAAER,oBAAZ;AACNS,IAAAA,eAAe,EAAEH;AADX,GADU;AAGhBd,EAAAA,SAAS,EAAE;AAACkB,IAAAA,QAAQ,EAAEL;AAAX;AAHK,CAApB;AAMA,MAAMM,UAAU,GAAG,CAACrC,KAAD,CAAnB;AAEA,MAAMsC,KAAK,GAAGzC,WAAW,CACrBiB,WADqB,EAErBmB,WAFqB,EAGrBhC,mBAAmB,CAACF,eAAe,CAAC,GAAGsC,UAAJ,CAAhB,CAHE,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\"\nimport {composeWithDevTools} from \"redux-devtools-extension\"\nimport {productListReducer, productDetailsReducer} from \"./reducers/productReducer\"\nimport {cartReducer} from \"./reducers/cartReducer\"\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer} from \"./reducers/userReducer\"\nimport {orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer} from \"./reducers/orderReducer\"\n\nconst rootReducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer\n    \n})\n\n// This is from Cache\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {}\n// The token is also stored here\n\n\nconst initalState = {\n    cart: {cartItems: cartItemsFromStorage, \n    shippingAddress: shippingAddressFromStorage},\n    userLogin: {userInfo: userInfoFromStorage} \n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    rootReducer, \n    initalState, \n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}
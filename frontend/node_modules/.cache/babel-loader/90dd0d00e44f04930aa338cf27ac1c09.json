{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Form, Button, Card, NavItem } from \"react-bootstrap\";\nimport { addToCart } from \"../actions/cartAction\"; // The match variable it available to this component, not needs to explicitly passing it\n// To the screen, does match means the URL?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen({\n  match,\n  location,\n  history\n}) {\n  _s();\n\n  const productId = match.params.id;\n  const qty = location.search ? location.search.split(\"=\")[1] : 1;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = id => {\n    console.log(id);\n  };\n\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: [\" Your cart is empty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n                src: item.image,\n                alt: \"item.name\",\n                fluid: true,\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 50\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${item.product}`,\n                children: [\" \", item.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: \" item.price \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: item.qty,\n                onChange: e => {\n                  dispatch(addToCart(item.product, Number(e.target.value)));\n                },\n                children: [...Array(item.countInStock).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: num + 1,\n                  children: num + 1\n                }, num + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"light\",\n                onClick: () => {\n                  removeFromCartHandler(item.product);\n                },\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 132\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"doC4f5cneqGDIuFR+PmVAAtKl6c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Message","Link","Row","Col","ListGroup","Image","Form","Button","Card","NavItem","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","split","dispatch","removeFromCartHandler","console","log","cart","state","cartItems","length","map","item","image","product","name","e","Number","target","value","Array","countInStock","keys","num"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,SAAlB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,MAA1C,EAAkDC,IAAlD,EAAwDC,OAAxD,QAAsE,iBAAtE;AACA,SAAQC,SAAR,QAAwB,uBAAxB,C,CAGA;AACA;;;AACA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAApB,EAAgD;AAAA;;AAC3D,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAiBN,QAAQ,CAACM,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAjB,GAAiD,CAA7D;AAEA,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIkB,SAAJ,EAAe;AAACM,MAAAA,QAAQ,CAACX,SAAS,CAACK,SAAD,EAAYG,GAAZ,CAAV,CAAR;AAAoC;AACvD,GAFQ,EAEN,CAACG,QAAD,EAAWN,SAAX,EAAsBG,GAAtB,CAFM,CAAT;;AAIA,QAAMI,qBAAqB,GAAIL,EAAD,IAAQ;AAACM,IAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AAAgB,GAAvD;;AAEA,QAAMQ,IAAI,GAAG1B,WAAW,CAAC2B,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAcF,IAApB;AAEA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKE,SAAS,CAACC,MAAV,KAAqB,CAArB,gBAAwB,QAAC,OAAD;AAAA,wDAA6B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,gBACG,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,OAAnB;AAAA,kBACKD,SAAS,CAACE,GAAV,CAAcC,IAAI,iBACf,QAAC,SAAD,CAAW,IAAX;AAAA,iCACI,QAAC,GAAD;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,2CAAa,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAEA,IAAI,CAACC,KAAjB;AAAwB,gBAAA,GAAG,EAAC,WAA5B;AAAwC,gBAAA,KAAK,MAA7C;AAA8C,gBAAA,OAAO;AAArD;AAAA;AAAA;AAAA;AAAA,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,2CAAa,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,YAAWD,IAAI,CAACE,OAAQ,EAAnC;AAAA,gCAAwCF,IAAI,CAACG,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,EAAE,EAAC,QAAjB;AAA0B,gBAAA,KAAK,EAAEH,IAAI,CAACZ,GAAtC;AAA2C,gBAAA,QAAQ,EAAGgB,CAAD,IAAK;AAACb,kBAAAA,QAAQ,CAACX,SAAS,CAACoB,IAAI,CAACE,OAAN,EAAeG,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB,CAAV,CAAR;AAA0D,iBAArH;AAAA,0BAEI,CAAC,GAAGC,KAAK,CAACR,IAAI,CAACS,YAAN,CAAL,CAAyBC,IAAzB,EAAJ,EAAqCX,GAArC,CACGY,GAAD,iBAAU;AAAoB,kBAAA,KAAK,EAAEA,GAAG,GAAC,CAA/B;AAAA,4BACPA,GAAG,GAAC;AADG,mBAAaA,GAAG,GAAC,CAAjB;AAAA;AAAA;AAAA;AAAA,wBADZ;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAaI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,OAAO,EAAC,OAA9B;AAAsC,gBAAA,OAAO,EAAE,MAAI;AAACnB,kBAAAA,qBAAqB,CAACQ,IAAI,CAACE,OAAN,CAArB;AAAoC,iBAAxF;AAAA,6CAA2F;AAAG,kBAAA,SAAS,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,wBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAqBF,IAAI,CAACE,OAA1B;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA+BI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GApDuBrB,U;UAIHb,W,EAOJC,W;;;KAXOY,U","sourcesContent":["import React, {useEffect} from 'react'\n\nimport {useDispatch, useSelector} from \"react-redux\" \nimport Message from \"../components/Message\"\nimport {Link} from \"react-router-dom\"\nimport {Row, Col, ListGroup, Image, Form, Button, Card, NavItem} from \"react-bootstrap\"\nimport {addToCart} from \"../actions/cartAction\" \n\n\n// The match variable it available to this component, not needs to explicitly passing it\n// To the screen, does match means the URL?\nexport default function CartScreen({match, location, history}) {\n    const productId = match.params.id\n    const qty = location.search? location.search.split(\"=\")[1] : 1\n\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        if (productId) {dispatch(addToCart(productId, qty))}\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {console.log(id)}\n\n    const cart = useSelector(state => state.cart)\n    const {cartItems} = cart\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1> Shopping Cart</h1>\n                {cartItems.length === 0? <Message> Your cart is empty <Link to=\"/\"> Go Back</Link></Message>: (\n                    <ListGroup variant=\"flush\">\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}> <Image src={item.image} alt=\"item.name\" fluid rounded /> </Col>\n                                    <Col md={3}> <Link to={`/product/${item.product}`}> {item.name} </Link></Col>\n                                    <Col md={2}> item.price </Col>\n                                    <Col md={2}> \n                                        <Form.Control as=\"select\" value={item.qty} onChange={(e)=>{dispatch(addToCart(item.product, Number(e.target.value)))}}> \n                                        {\n                                            [...Array(item.countInStock).keys()].map(\n                                              (num) => (<option key={num+1} value={num+1}> \n                                                {num+1}\n                                            </option>))}\n                                        </Form.Control> \n                                    </Col>\n                                    <Col md={2} >\n                                        <Button type=\"button\" variant=\"light\" onClick={()=>{removeFromCartHandler(item.product)}}> <i className = \"fas fa-trash\"></i> </Button>\n                                        \n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n\n            <Col md={4}> \n            \n            </Col>\n            \n        </Row>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
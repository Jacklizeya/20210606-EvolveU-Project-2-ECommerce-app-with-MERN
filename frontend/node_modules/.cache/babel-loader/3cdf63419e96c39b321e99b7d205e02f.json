{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingScreen({\n  history\n}) {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart; // This is all local state  \n\n  const [address, setAddress] = useState(shippingAddress.cart);\n  const [city, setCity] = useState(shippingAddress);\n  const [postCode, setPostCode] = useState(shippingAddress);\n  const [country, setCountry] = useState(shippingAddress);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(\"submit\"); // dispatch \n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Shipping \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter address\",\n          value: address,\n          required: true,\n          onChange: e => {\n            setAddress(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" city \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter city\",\n          value: city,\n          required: true,\n          onChange: e => {\n            setCity(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" postCode \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter postCode\",\n          value: postCode,\n          required: true,\n          onChange: e => {\n            setPostCode(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" country \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter country\",\n          value: country,\n          required: true,\n          onChange: e => {\n            setCountry(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \" Continue \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShippingScreen, \"juB1pgSIHYNJcIwDfR34WRKQZr8=\", false, function () {\n  return [useSelector];\n});\n\n_c = ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","useEffect","Form","Button","useDispatch","useSelector","FormContainer","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","city","setCity","postCode","setPostCode","country","setCountry","submitHandler","e","preventDefault","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,mBAAR,QAAkC,uBAAlC;;AAEA,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAmC;AAAA;;AAE9C,QAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAoBF,IAA1B,CAH8C,CAK9C;;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACY,eAAe,CAACF,IAAjB,CAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAACY,eAAD,CAAhC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAACY,eAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAACY,eAAD,CAAtC;;AAEA,QAAMS,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAFyB,CAGzB;AAEH,GALD;;AAOA,sBACI,QAAC,aAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEJ,aAAhB;AAAA,8BAEI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,eAAtC;AAAsD,UAAA,KAAK,EAAER,OAA7D;AAAsE,UAAA,QAAQ,MAA9E;AAA+E,UAAA,QAAQ,EAAGS,CAAD,IAAK;AAACR,YAAAA,UAAU,CAACQ,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV;AAA2B;AAA1H;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,YAAtC;AAAmD,UAAA,KAAK,EAAEZ,IAA1D;AAAgE,UAAA,QAAQ,MAAxE;AAAyE,UAAA,QAAQ,EAAGO,CAAD,IAAK;AAACN,YAAAA,OAAO,CAACM,CAAC,CAACI,MAAF,CAASC,KAAV,CAAP;AAAwB;AAAjH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,gBAAtC;AAAuD,UAAA,KAAK,EAAEV,QAA9D;AAAwE,UAAA,QAAQ,MAAhF;AAAiF,UAAA,QAAQ,EAAGK,CAAD,IAAK;AAACJ,YAAAA,WAAW,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAAX;AAA4B;AAA7H;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAiBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,eAAtC;AAAsD,UAAA,KAAK,EAAER,OAA7D;AAAsE,UAAA,QAAQ,MAA9E;AAA+E,UAAA,QAAQ,EAAGG,CAAD,IAAK;AAACF,YAAAA,UAAU,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV;AAA2B;AAA1H;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAsBI,QAAC,MAAD;AAAS,QAAA,IAAI,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA/CuBnB,c;UAEPH,W;;;KAFOG,c","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport {Form, Button} from \"react-bootstrap\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport FormContainer from \"../components/FormContainer\"\nimport {saveShippingAddress} from \"../actions/cartAction\"\n\nexport default function ShippingScreen({history}) {\n    \n    const cart = useSelector(state => state.cart)\n    const {shippingAddress} = cart\n\n    // This is all local state  \n    const [address, setAddress] = useState(shippingAddress.cart)\n    const [city, setCity] = useState(shippingAddress)    \n    const [postCode, setPostCode] = useState(shippingAddress)\n    const [country, setCountry] = useState(shippingAddress)\n\n    const submitHandler = (e) => { \n        e.preventDefault()\n        console.log(\"submit\")\n        // dispatch \n\n    }\n\n    return (\n        <FormContainer>\n            <h1> Shipping </h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId=\"address\">\n                    <Form.Label> address </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter address\" value={address} required onChange={(e)=>{setAddress(e.target.value)}}/> \n                </Form.Group>\n\n                <Form.Group controlId=\"city\">\n                    <Form.Label> city </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter city\" value={city} required onChange={(e)=>{setCity(e.target.value)}}/> \n                </Form.Group>\n\n                <Form.Group controlId=\"postCode\">\n                    <Form.Label> postCode </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter postCode\" value={postCode} required onChange={(e)=>{setPostCode(e.target.value)}}/> \n                </Form.Group>\n\n                <Form.Group controlId=\"country\">\n                    <Form.Label> country </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter country\" value={country} required onChange={(e)=>{setCountry(e.target.value)}}/> \n                </Form.Group>\n            \n                <Button  type=\"submit\" variant=\"primary\"> Continue </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
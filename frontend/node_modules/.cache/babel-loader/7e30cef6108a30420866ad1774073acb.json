{"ast":null,"code":"import _slicedToArray from\"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Table,Form,Button,Row,Col}from\"react-bootstrap\";import{LinkContainer}from\"react-router-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import{getUserDetails,updateUserProfile}from\"../actions/userAction\";import{listMyOrders}from\"../actions/orderAction\";import{USER_UPDATE_PROFILE_RESET}from\"../constants/userConstant\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ProfileScreen(_ref){var location=_ref.location,history=_ref.history;//  This is going to focus on using local state\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];// Check if use is logged in\nvar userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;// This is the main global state for this component: userDetails\nvar dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var success=userUpdateProfile.success;var orderListMy=useSelector(function(state){return state.orderListMy;});var loadingOrders=orderListMy.loading,errorOrders=orderListMy.error,orders=orderListMy.orders;useEffect(function(){console.log(\"the profile screen\");if(!userInfo){console.log(\"unlogin status\");history.push(\"/login\");}// if the user did not login, then go to the main page\nelse{// There was a moment it was going crazy, something is looping by itself\nconsole.log(\"login status\");if(!user||!user.name||success){dispatch({type:USER_UPDATE_PROFILE_RESET});console.log(\"there is nothing in userDetails.user.name after 1st login, I am going to get it now\");dispatch(getUserDetails(\"profile\"));console.log(\"going to grab the orders for this customer\");dispatch(listMyOrders());console.log(\"got order listnow\");}// when we just login details is empty always, we need to initialize the details      \nelse{console.log(\"after first login, I have all the information I need now, I am able to put the informaiton in\");setName(user.name);setEmail(user.email);}}},[dispatch,history,userInfo,user,success]);var submitHandler=function submitHandler(e){e.preventDefault();// dispatch(register(name, email, password))\nif(password!==confirmPassword){setMessage(\"Passwords do not match\");}else{// DISPATCH UPDATE PROFILE\ndispatch(updateUserProfile({name:name,email:email,password:password}));// an object is passing\n}};//  all stuff inside is the children\nreturn/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:3,children:[/*#__PURE__*/_jsx(\"h2\",{children:\" User Profile \"}),/*#__PURE__*/_jsxs(\"div\",{children:[message&&/*#__PURE__*/_jsxs(Message,{variant:\"danger\",children:[\" \",message,\" \"]}),error&&/*#__PURE__*/_jsxs(Message,{variant:\"danger\",children:[\" \",error,\" \"]}),success&&/*#__PURE__*/_jsx(Message,{variant:\"success\",children:\" Profile updated \"}),loading&&/*#__PURE__*/_jsx(Loader,{})]}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\" Name \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\" Email Address \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\" password  \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter password\",value:password,onChange:function onChange(e){setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\" confirm Password  \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"confirmPassword\",placeholder:\"Enter confirmPassword\",value:confirmPassword,onChange:function onChange(e){setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\" Update \"})]})]}),/*#__PURE__*/_jsxs(Col,{md:9,children:[/*#__PURE__*/_jsx(\"h2\",{children:\" My orders \"}),loadingOrders?/*#__PURE__*/_jsx(Loader,{}):errorOrders?/*#__PURE__*/_jsxs(Message,{variant:\"danger\",children:[\" \",errorOrders,\" \"]}):/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,responsive:true,className:\"table-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\" ID \"}),/*#__PURE__*/_jsx(\"th\",{children:\" DATE \"}),/*#__PURE__*/_jsx(\"th\",{children:\" TOTAL \"}),/*#__PURE__*/_jsx(\"th\",{children:\" PAID \"}),/*#__PURE__*/_jsx(\"th\",{children:\" DELIVERED \"}),/*#__PURE__*/_jsx(\"th\",{children:\" DELIVERED \"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map(function(order){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",order._id,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",order.createdAt.substring(0,10),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",order.totalPrice,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",order.isPaid?order.paidAt.substring(0,10):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\",style:{color:\"red\"},children:\" \"}),\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",order.isDelivered?order.deliveredAt.substring(0,10):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\",style:{color:\"red\"},children:\" \"}),\" \"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(LinkContainer,{to:\"/order/\".concat(order._id),children:/*#__PURE__*/_jsx(Button,{variant:\"light\",className:\"btn-sm\",children:\" Details \"})})})]},order._id);})})]})]})]});}","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Table","Form","Button","Row","Col","LinkContainer","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","listMyOrders","USER_UPDATE_PROFILE_RESET","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","userLogin","state","userInfo","dispatch","userDetails","loading","error","user","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","console","log","push","type","submitHandler","e","preventDefault","target","value","map","order","_id","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"iMAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CAEA,OAAQC,KAAR,CAAeC,IAAf,CAAqBC,MAArB,CAA6BC,GAA7B,CAAkCC,GAAlC,KAA4C,iBAA5C,CACA,OAAQC,aAAR,KAA4B,wBAA5B,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAAQC,cAAR,CAAwBC,iBAAxB,KAAgD,uBAAhD,CACA,OAAQC,YAAR,KAA2B,wBAA3B,CACA,OAAQC,yBAAR,KAAwC,2BAAxC,C,wFAIA,cAAe,SAASC,CAAAA,aAAT,MAA8C,IAArBC,CAAAA,QAAqB,MAArBA,QAAqB,CAAXC,OAAW,MAAXA,OAAW,CAC7D;AACI,cAAwBlB,QAAQ,CAAC,EAAD,CAAhC,wCAAOmB,IAAP,eAAaC,OAAb,eACA,eAA0BpB,QAAQ,CAAC,EAAD,CAAlC,yCAAOqB,KAAP,eAAcC,QAAd,eACA,eAAgCtB,QAAQ,CAAC,EAAD,CAAxC,yCAAOuB,QAAP,eAAiBC,WAAjB,eACA,eAA8CxB,QAAQ,CAAC,EAAD,CAAtD,yCAAOyB,eAAP,eAAwBC,kBAAxB,eACA,eAA8B1B,QAAQ,CAAC,IAAD,CAAtC,0CAAO2B,OAAP,gBAAgBC,UAAhB,gBAIA;AACA,GAAMC,CAAAA,SAAS,CAAGpB,WAAW,CAAC,SAAAqB,KAAK,QAAIA,CAAAA,KAAK,CAACD,SAAV,EAAN,CAA7B,CACA,GAAOE,CAAAA,QAAP,CAAmBF,SAAnB,CAAOE,QAAP,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAGxB,WAAW,EAA5B,CACA,GAAMyB,CAAAA,WAAW,CAAGxB,WAAW,CAAC,SAAAqB,KAAK,QAAIA,CAAAA,KAAK,CAACG,WAAV,EAAN,CAA/B,CACA,GAAOC,CAAAA,OAAP,CAA+BD,WAA/B,CAAOC,OAAP,CAAgBC,KAAhB,CAA+BF,WAA/B,CAAgBE,KAAhB,CAAuBC,IAAvB,CAA+BH,WAA/B,CAAuBG,IAAvB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG5B,WAAW,CAAC,SAAAqB,KAAK,QAAIA,CAAAA,KAAK,CAACO,iBAAV,EAAN,CAArC,CACA,GAAOC,CAAAA,OAAP,CAAkBD,iBAAlB,CAAOC,OAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG9B,WAAW,CAAC,SAAAqB,KAAK,QAAIA,CAAAA,KAAK,CAACS,WAAV,EAAN,CAA/B,CACA,GAAgBC,CAAAA,aAAhB,CAA6DD,WAA7D,CAAOL,OAAP,CAAsCO,WAAtC,CAA6DF,WAA7D,CAA+BJ,KAA/B,CAAmDO,MAAnD,CAA6DH,WAA7D,CAAmDG,MAAnD,CAEAzC,SAAS,CAAC,UAAI,CACV0C,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACA,GAAI,CAACb,QAAL,CAAe,CACXY,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACA1B,OAAO,CAAC2B,IAAR,CAAa,QAAb,EAAuB,CAAE;AAF7B,IAGK,CAED;AACAF,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,GAAG,CAACR,IAAD,EAAS,CAACA,IAAI,CAACjB,IAAf,EAAuBmB,OAA1B,CAAmC,CAC/BN,QAAQ,CAAC,CAACc,IAAI,CAAE/B,yBAAP,CAAD,CAAR,CACA4B,OAAO,CAACC,GAAR,CAAY,qFAAZ,EACAZ,QAAQ,CAACpB,cAAc,CAAC,SAAD,CAAf,CAAR,CACA+B,OAAO,CAACC,GAAR,CAAY,4CAAZ,EACAZ,QAAQ,CAAClB,YAAY,EAAb,CAAR,CACA6B,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACH,CAAE;AAPH,IAQK,CACDD,OAAO,CAACC,GAAR,CAAY,+FAAZ,EACAxB,OAAO,CAACgB,IAAI,CAACjB,IAAN,CAAP,CAAoBG,QAAQ,CAACc,IAAI,CAACf,KAAN,CAAR,CACvB,CACJ,CACJ,CAtBQ,CAsBN,CAACW,QAAD,CAAWd,OAAX,CAAoBa,QAApB,CAA8BK,IAA9B,CAAoCE,OAApC,CAtBM,CAAT,CAyBA,GAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACA;AACA,GAAI1B,QAAQ,GAAKE,eAAjB,CAAkC,CAACG,UAAU,CAAC,wBAAD,CAAV,CAAqC,CAAxE,IAA8E,CAC1E;AACAI,QAAQ,CAACnB,iBAAiB,CAAC,CAACM,IAAI,CAAJA,IAAD,CAAOE,KAAK,CAALA,KAAP,CAAcE,QAAQ,CAARA,QAAd,CAAD,CAAlB,CAAR,CAAsD;AACzD,CACJ,CAPD,CASJ;AACI,mBACI,MAAC,GAAD,yBACI,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,wBACI,sCADJ,cAEI,uBACKI,OAAO,eAAI,MAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,eAA4BA,OAA5B,OADhB,CAEKQ,KAAK,eAAI,MAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,eAA4BA,KAA5B,OAFd,CAGKG,OAAO,eAAI,KAAC,OAAD,EAAS,OAAO,CAAC,SAAjB,+BAHhB,CAIKJ,OAAO,eAAI,KAAC,MAAD,IAJhB,GAFJ,cASI,MAAC,IAAD,EAAM,QAAQ,CAAIa,aAAlB,wBAEI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,qBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,YAAtC,CAAmD,KAAK,CAAE5B,IAA1D,CAAgE,QAAQ,CAAE,kBAAC6B,CAAD,CAAK,CAAC5B,OAAO,CAAC4B,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAAwB,CAAxG,EAFJ,GAFJ,cAOI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,8BADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,OAAnB,CAA2B,WAAW,CAAC,aAAvC,CAAqD,KAAK,CAAE9B,KAA5D,CAAmE,QAAQ,CAAE,kBAAC2B,CAAD,CAAK,CAAC1B,QAAQ,CAAC0B,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR,CAAyB,CAA5G,EAFJ,GAPJ,cAYI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,UAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,0BADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,UAAnB,CAA8B,WAAW,CAAC,gBAA1C,CAA2D,KAAK,CAAE5B,QAAlE,CAA4E,QAAQ,CAAE,kBAACyB,CAAD,CAAK,CAACxB,WAAW,CAACwB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX,CAA4B,CAAxH,EAFJ,GAZJ,cAiBI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,iBAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,kCADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,iBAAnB,CAAqC,WAAW,CAAC,uBAAjD,CAAyE,KAAK,CAAE1B,eAAhF,CAAiG,QAAQ,CAAE,kBAACuB,CAAD,CAAK,CAACtB,kBAAkB,CAACsB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB,CAAmC,CAApJ,EAFJ,GAjBJ,cAsBI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAtBJ,GATJ,GADJ,cAmCI,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,wBACI,mCADJ,CAEKX,aAAa,cAAE,KAAC,MAAD,IAAF,CAAcC,WAAW,cAAG,MAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,eAA4BA,WAA5B,OAAH,cACnC,MAAC,KAAD,EAAO,OAAO,KAAd,CAAe,QAAQ,KAAvB,CAAwB,KAAK,KAA7B,CAA8B,UAAU,KAAxC,CAAyC,SAAS,CAAG,UAArD,wBACI,oCACI,mCACI,4BADJ,cAEI,8BAFJ,cAGI,+BAHJ,cAII,8BAJJ,cAKI,mCALJ,cAMI,mCANJ,GADJ,EADJ,cAWI,uBACKC,MAAM,CAACU,GAAP,CAAW,SAACC,KAAD,CAAS,CAAC,mBAClB,mCACI,0BAAMA,KAAK,CAACC,GAAZ,OADJ,cAEI,0BAAMD,KAAK,CAACE,SAAN,CAAgBC,SAAhB,CAA0B,CAA1B,CAA6B,EAA7B,CAAN,OAFJ,cAGI,0BAAMH,KAAK,CAACI,UAAZ,OAHJ,cAII,0BAAMJ,KAAK,CAACK,MAAN,CAAeL,KAAK,CAACM,MAAN,CAAaH,SAAb,CAAuB,CAAvB,CAA0B,EAA1B,CAAf,cAA+C,UAAG,SAAS,CAAC,cAAb,CAA4B,KAAK,CAAE,CAACI,KAAK,CAAE,KAAR,CAAnC,eAArD,OAJJ,cAKI,0BAAMP,KAAK,CAACQ,WAAN,CAAoBR,KAAK,CAACS,WAAN,CAAkBN,SAAlB,CAA4B,CAA5B,CAA+B,EAA/B,CAApB,cAAyD,UAAG,SAAS,CAAC,cAAb,CAA4B,KAAK,CAAE,CAACI,KAAK,CAAE,KAAR,CAAnC,eAA/D,OALJ,cAMI,iCACI,KAAC,aAAD,EAAe,EAAE,kBAAYP,KAAK,CAACC,GAAlB,CAAjB,uBACI,KAAC,MAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,SAAS,CAAC,QAAlC,uBADJ,EADJ,EANJ,GAASD,KAAK,CAACC,GAAf,CADkB,CAapB,CAbD,CADL,EAXJ,GAHR,GAnCJ,GADJ,CAuEH","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport {Table, Form, Button, Row, Col} from \"react-bootstrap\"\nimport {LinkContainer} from \"react-router-bootstrap\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport {getUserDetails, updateUserProfile} from \"../actions/userAction\"\nimport {listMyOrders} from \"../actions/orderAction\"\nimport {USER_UPDATE_PROFILE_RESET} from \"../constants/userConstant\"\n \n\n\nexport default function ProfileScreen( {location, history} ) {\n//  This is going to focus on using local state\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(null)\n\n\n\n    // Check if use is logged in\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    // This is the main global state for this component: userDetails\n    const dispatch = useDispatch()\n    const userDetails = useSelector(state => state.userDetails)\n    const {loading, error, user} = userDetails\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const {loading: loadingOrders, error: errorOrders, orders} = orderListMy\n\n    useEffect(()=>{\n        console.log(\"the profile screen\")\n        if (!userInfo) {\n            console.log(\"unlogin status\")\n            history.push(\"/login\")}  // if the user did not login, then go to the main page\n        else { \n\n            // There was a moment it was going crazy, something is looping by itself\n            console.log(\"login status\")\n            if(!user || !user.name || success) {\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\n                console.log(\"there is nothing in userDetails.user.name after 1st login, I am going to get it now\"); \n                dispatch(getUserDetails(\"profile\"))\n                console.log(\"going to grab the orders for this customer\")\n                dispatch(listMyOrders())\n                console.log(\"got order listnow\")\n            }  // when we just login details is empty always, we need to initialize the details      \n            else {\n                console.log(\"after first login, I have all the information I need now, I am able to put the informaiton in\")\n                setName(user.name); setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // dispatch(register(name, email, password))\n        if (password !== confirmPassword) {setMessage(\"Passwords do not match\")} else {\n            // DISPATCH UPDATE PROFILE\n            dispatch(updateUserProfile({name, email, password}))  // an object is passing\n        }\n    }\n\n//  all stuff inside is the children\n    return (\n        <Row>\n            <Col md={3}> \n                <h2> User Profile </h2>\n                <div>\n                    {message && <Message variant=\"danger\"> {message} </Message>}\n                    {error && <Message variant=\"danger\"> {error} </Message>}\n                    {success && <Message variant=\"success\"> Profile updated </Message>}\n                    {loading && <Loader/>}\n                </div>\n                \n                <Form onSubmit = {submitHandler} >\n\n                    <Form.Group controlId=\"name\">\n                        <Form.Label> Name </Form.Label>\n                        <Form.Control type=\"name\" placeholder=\"Enter name\" value={name} onChange={(e)=>{setName(e.target.value)}}/> \n                    </Form.Group> \n\n                    <Form.Group controlId=\"email\">\n                        <Form.Label> Email Address </Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>{setEmail(e.target.value)}}/> \n                    </Form.Group> \n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label> password  </Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter password\" value={password} onChange={(e)=>{setPassword(e.target.value)}}/> \n                    </Form.Group>  \n\n                    <Form.Group controlId=\"confirmPassword\">\n                        <Form.Label> confirm Password  </Form.Label>\n                        <Form.Control type=\"confirmPassword\" placeholder=\"Enter confirmPassword\" value={confirmPassword} onChange={(e)=>{setConfirmPassword(e.target.value)}}/> \n                    </Form.Group>\n\n                    <Button type=\"submit\" variant=\"primary\"> Update </Button>\n                </Form>\n            </Col>\n            <Col md={9}> \n                <h2> My orders </h2> \n                {loadingOrders? <Loader/> : errorOrders ? <Message variant=\"danger\"> {errorOrders} </Message> : (\n                    <Table striped bordered hover responsive className = \"table-sm\"> \n                        <thead> \n                            <tr>\n                                <th> ID </th>\n                                <th> DATE </th>\n                                <th> TOTAL </th>\n                                <th> PAID </th>\n                                <th> DELIVERED </th>\n                                <th> DELIVERED </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order)=>{return (\n                                <tr key={order._id}>\n                                    <td> {order._id} </td>\n                                    <td> {order.createdAt.substring(0, 10)} </td>\n                                    <td> {order.totalPrice} </td>\n                                    <td> {order.isPaid ? order.paidAt.substring(0, 10): (<i className=\"fas fa-times\" style={{color: \"red\"}}> </i>)} </td>\n                                    <td> {order.isDelivered ? order.deliveredAt.substring(0, 10): (<i className=\"fas fa-times\" style={{color: \"red\"}}> </i>)} </td>\n                                    <td> \n                                        <LinkContainer to={`/order/${order._id}`}> \n                                            <Button variant=\"light\" className=\"btn-sm\" > Details </Button> \n                                        </LinkContainer> \n                                    </td>\n                                </tr> \n                            )})}               \n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
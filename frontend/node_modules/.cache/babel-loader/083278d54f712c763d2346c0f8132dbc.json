{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL } from \"../constants/productConstants\";\nimport axios from \"axios\";\nexport const listProducts = (keyword = \"\") => async dispatch => {\n  try {\n    console.log(\"enter thunk\");\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    }); //start loading\n\n    const {\n      data\n    } = await axios.get(`/api/products?`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    }); // start displaying\n\n    console.log(\"exit thunk\");\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    }); // start displaying\n  }\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    console.log(\"enter thunk\");\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    }); //start loading\n\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    }); // start displaying\n\n    console.log(\"exit thunk\");\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    }); // start displaying\n  }\n};\nexport const deleteProduct = id => async (dispatch, getState) => {\n  console.log(\"Entering Pay Order\");\n\n  try {\n    // Initiate request\n    console.log(\"entering the try path\");\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    console.log(\"1st dispatch sent\"); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // Update backend server record\n\n    await axios.delete(`/api/products/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"reply from database\");\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n    console.log(\"I updated Redux state\");\n  } catch (error) {\n    console.log(\"entering error path\");\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  console.log(\"Entering Pay Order\");\n\n  try {\n    // Initiate request\n    console.log(\"entering the try path\");\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    console.log(\"1st dispatch sent\"); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // Update backend server record\n\n    const {\n      data\n    } = await axios.post(`/api/products`, {}, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"DATA From create\", data);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n    console.log(\"I send data to store\");\n  } catch (error) {\n    console.log(\"entering error path\");\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  console.log(\"Entering Pay Order\");\n\n  try {\n    // Initiate request\n    console.log(\"entering the try path\");\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    console.log(\"1st dispatch sent\"); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // Update backend server record\n\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"reply from database\");\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n    console.log(\"I updated Redux state\");\n  } catch (error) {\n    console.log(\"entering error path\");\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  console.log(\"Entering Pay Order\");\n\n  try {\n    // Initiate request\n    console.log(\"entering the try path\");\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    console.log(\"1st dispatch sent\"); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // Update backend server record\n\n    await axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"reply from database\");\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n    console.log(\"I updated Redux state\");\n  } catch (error) {\n    console.log(\"entering error path\");\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/actions/productAction.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","axios","listProducts","keyword","dispatch","console","log","type","data","get","payload","error","response","message","listProductDetails","id","deleteProduct","getState","userLogin","userInfo","delete","headers","token","createProduct","post","updateProduct","product","put","_id","createProductReview","productId","review"],"mappings":"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","sourcesContent":["import {PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, \n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, \n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, \n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, \n} from \"../constants/productConstants\"\n\nimport axios from \"axios\"\n\n\nexport const listProducts = (keyword = \"\") => async(dispatch) => {\n    try {\n        console.log(\"enter thunk\")\n        dispatch({type: PRODUCT_LIST_REQUEST})  //start loading\n        const {data} = await axios.get(`/api/products?`)\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data}) // start displaying\n        console.log(\"exit thunk\")\n    }\n    catch (error) {console.log(error)\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message}) // start displaying\n    }\n}\n\nexport const listProductDetails = (id) => async(dispatch) => {\n    try {\n        console.log(\"enter thunk\")\n        dispatch({type: PRODUCT_DETAILS_REQUEST})  //start loading\n        const {data} = await axios.get(`/api/products/${id}`)\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data}) // start displaying\n        console.log(\"exit thunk\")\n    }\n    catch (error) {console.log(error)\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message}) // start displaying\n    }\n\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    console.log(\"Entering Pay Order\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path\")    \n        dispatch({ type: PRODUCT_DELETE_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n       \n        // Update backend server record\n        await axios.delete(`/api/products/${id}`, {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"reply from database\")\n        dispatch({ type: PRODUCT_DELETE_SUCCESS})\n        console.log(\"I updated Redux state\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: PRODUCT_DELETE_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n    console.log(\"Entering Pay Order\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path\")    \n        dispatch({ type: PRODUCT_CREATE_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n       \n        // Update backend server record\n        const {data} = await axios.post(`/api/products`, {}, {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"DATA From create\", data)\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data})\n        console.log(\"I send data to store\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: PRODUCT_CREATE_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    console.log(\"Entering Pay Order\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path\")    \n        dispatch({ type: PRODUCT_UPDATE_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n       \n        // Update backend server record\n        const {data} = await axios.put(`/api/products/${product._id}`, product,  {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"reply from database\")\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data})\n        console.log(\"I updated Redux state\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: PRODUCT_UPDATE_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    console.log(\"Entering Pay Order\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path\")    \n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n       \n        // Update backend server record\n         await axios.post(`/api/products/${productId}/reviews`, review ,  {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"reply from database\")\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS})\n        console.log(\"I updated Redux state\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: PRODUCT_CREATE_REVIEW_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}"]},"metadata":{},"sourceType":"module"}
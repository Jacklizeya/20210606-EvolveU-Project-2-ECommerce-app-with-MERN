{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from \"../constants/cartConstants\"; // This cartReducer didnot deal with Server and backend\n\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      {\n        const item = action.payload; // this contains the information about what I want to buy\n        // this contains the information about what I have in the cart already\n\n        const existItem = state.cartItems.find(x => x.product === item.product); //          return the first item that matches the criteria\n\n        if (existItem) {\n          return { ...state,\n            cartItems: state.cartItems.map(x => x.product === item.product ? item : x)\n          }; // replace with payload or use the old one\n        } else {\n          return { ...state,\n            cartItems: [...state.cartItems, item]\n          };\n        }\n      }\n\n    case CART_REMOVE_ITEM:\n      {\n        return { ...state,\n          cartItems: state.cartItems.filter(x => x.product !== action.payload)\n        };\n      }\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      {\n        return { ...state,\n          shippingAddress: action.payload\n        };\n      }\n\n    case CART_SAVE_PAYMENT_METHOD:\n      {\n        return { ...state,\n          paymentMethod: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/DATA/EvolveU/PROJECT II/Project2ECommerce/frontend/src/reducers/cartReducer.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,EAAyCC,0BAAzC,EAAqEC,wBAArE,QAAoG,4BAApG,C,CAEA;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAE,EAAZ;AAAgBC,EAAAA,eAAe,EAAG;AAAlC,CAAT,EAAiDC,MAAjD,KAA4D;AACnF,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,aAAL;AAAwB;AACpB,cAAMU,IAAI,GAAGF,MAAM,CAACG,OAApB,CADoB,CACS;AAC7B;;AACA,cAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB,CAHoB,CAIhC;;AACY,YAAIH,SAAJ,EAAe;AACX,iBAAO,EAAC,GAAGP,KAAJ;AACHC,YAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAAnB,GAA4BL,IAA5B,GAAmCI,CAA5D;AADR,WAAP,CADW,CAEqE;AACnF,SAHD,MAGO;AAAC,iBAAO,EAAC,GAAGT,KAAJ;AAAWC,YAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAAtB,WAAP;AAAyD;AAEpE;;AACD,SAAKT,gBAAL;AAAwB;AACpB,eAAO,EAAC,GAAGI,KAAJ;AAAWC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAAtB,SAAP;AACH;;AACD,SAAKT,0BAAL;AAAkC;AAC9B,eAAO,EAAC,GAAGG,KAAJ;AAAWE,UAAAA,eAAe,EAAEC,MAAM,CAACG;AAAnC,SAAP;AACH;;AACD,SAAKR,wBAAL;AAAgC;AAC5B,eAAO,EAAC,GAAGE,KAAJ;AAAWa,UAAAA,aAAa,EAAEV,MAAM,CAACG;AAAjC,SAAP;AACH;;AAED;AAAS,aAAON,KAAP;AAtBb;AA2BH,CA5BM","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from \"../constants/cartConstants\"\r\n\r\n// This cartReducer didnot deal with Server and backend\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress : {}} , action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM    : {\r\n            const item = action.payload  // this contains the information about what I want to buy\r\n            // this contains the information about what I have in the cart already\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n//          return the first item that matches the criteria\r\n            if (existItem) {\r\n                return {...state, \r\n                    cartItems: state.cartItems.map(x => x.product === item.product? item : x )} // replace with payload or use the old one\r\n            } else {return {...state, cartItems: [...state.cartItems, item]}}\r\n\r\n        }\r\n        case CART_REMOVE_ITEM : {\r\n            return {...state, cartItems: state.cartItems.filter(x => x.product !== action.payload)}\r\n        }\r\n        case CART_SAVE_SHIPPING_ADDRESS : {\r\n            return {...state, shippingAddress: action.payload}\r\n        }\r\n        case CART_SAVE_PAYMENT_METHOD : {\r\n            return {...state, paymentMethod: action.payload}\r\n        }\r\n\r\n        default: return state\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
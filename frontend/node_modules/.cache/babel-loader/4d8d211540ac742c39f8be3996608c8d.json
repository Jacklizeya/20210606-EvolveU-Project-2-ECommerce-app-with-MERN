{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_REQEUST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQEUST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LIST_REQEUST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DETAILS_REQEUST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQEUST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_DELETE_REQEUST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQEUST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from \"../constants/userConstant\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_LOGIN_REQEUST\n    }); // Make real request to database\n\n    const {\n      data\n    } = await axios.post(\"api/users/login\", {\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"UserInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: USER_UPDATE_PROFILE_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_REGISTER_REQEUST\n    }); // Make real request to database\n\n    const {\n      data\n    } = await axios.post(\"api/users\", {\n      name,\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"UserInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //  get User Details, go to api/users/profile\n\nexport const getUserDetails = inputInfo => async (dispatch, getState) => {\n  console.log(\"I am going to getUserDetails\");\n\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_DETAILS_REQEUST\n    }); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // can I try useSelector here instead of getState? no, this is a function, not React Component\n    // that is why I have to use GetState to get more info\n    // Make real request to database\n\n    const {\n      data\n    } = await axios.get(`/api/users/${inputInfo}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    console.log(\"I got user details now\");\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  console.log(\"I am going to getUserDetails\");\n\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQEUST\n    }); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // can I try useSelector here instead of getState? no, this is a function, not React Component\n    // that is why I have to use GetState to get more info\n    // Make real request to database\n\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    console.log(\"I got user UPDATE_PROFILE now\");\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  console.log(\"I am going to getUserDetails\");\n\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_LIST_REQEUST\n    }); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get(`/api/users`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n    console.log(\"I got user LIST now\");\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Register/Login/Update/Logout\n\nexport const deleteUsers = id => async (dispatch, getState) => {\n  console.log(\"I am going to getUserDetails\");\n\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_DELETE_REQEUST\n    }); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    await axios.delete(`/api/users/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n    console.log(\"I got user DELETE now\");\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUsers = user => async (dispatch, getState) => {\n  console.log(\"I am going to getUserDetails\");\n\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_UPDATE_REQEUST\n    }); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const data = await axios.put(`/api/users/${user_id}`, user, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    console.log(\"I got user UPDATE now\");\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/actions/userAction.js"],"names":["axios","USER_LOGIN_REQEUST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQEUST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LIST_REQEUST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DETAILS_REQEUST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQEUST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_DELETE_REQEUST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQEUST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","data","post","headers","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","inputInfo","getState","console","log","userLogin","userInfo","get","token","updateUserProfile","user","put","listUsers","deleteUsers","id","delete","updateUsers","user_id"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport {\n    USER_LOGIN_REQEUST, \n    USER_LOGIN_SUCCESS, \n    USER_LOGIN_FAIL, \n    USER_LOGOUT,\n    USER_REGISTER_REQEUST, \n    USER_REGISTER_SUCCESS, \n    USER_REGISTER_FAIL,\n    USER_LIST_REQEUST, \n    USER_LIST_SUCCESS, \n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DETAILS_REQEUST, \n    USER_DETAILS_SUCCESS, \n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQEUST, \n    USER_UPDATE_PROFILE_SUCCESS, \n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_DELETE_REQEUST, \n    USER_DELETE_SUCCESS, \n    USER_DELETE_FAIL,\n    USER_UPDATE_REQEUST, \n    USER_UPDATE_SUCCESS, \n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n} from \"../constants/userConstant\" \n\nimport {ORDER_LIST_MY_RESET} from \"../constants/orderConstants\" \n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        // Initiate request\n        dispatch({ type: USER_LOGIN_REQEUST })\n        // Make real request to database\n        const {data} = await axios.post(\"api/users/login\", {email, password}, {headers : {\"Content-Type\": \"application/json\"}} )\n        dispatch({ type: USER_LOGIN_SUCCESS, payload : data})\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data))\n    } catch (error) {\n        dispatch({type: USER_LOGIN_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const logout = ( ) => async (dispatch) => {\n    localStorage.removeItem(\"userInfo\")\n    dispatch({type: USER_LOGOUT})\n    dispatch({type: USER_DETAILS_RESET})\n    dispatch({type: USER_UPDATE_PROFILE_RESET})\n    dispatch({type: ORDER_LIST_MY_RESET})\n    dispatch({type: USER_LIST_RESET})\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        // Initiate request\n        dispatch({ type: USER_REGISTER_REQEUST })\n        // Make real request to database\n        const {data} = await axios.post(\"api/users\", {name, email, password}, {headers : {\"Content-Type\": \"application/json\"}} )\n        dispatch({ type: USER_REGISTER_SUCCESS, payload : data})\n        dispatch({ type: USER_LOGIN_SUCCESS, payload : data})\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data))\n    } catch (error) {\n        dispatch({type: USER_REGISTER_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\n//  get User Details, go to api/users/profile\nexport const getUserDetails = (inputInfo) => async (dispatch, getState) => {\n    console.log(\"I am going to getUserDetails\")\n    try {\n        // Initiate request\n        dispatch({ type: USER_DETAILS_REQEUST })\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n        // can I try useSelector here instead of getState? no, this is a function, not React Component\n        // that is why I have to use GetState to get more info\n        // Make real request to database\n        \n        const {data} = await axios.get(`/api/users/${inputInfo}`, {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        dispatch({ type: USER_DETAILS_SUCCESS, payload : data})\n        console.log(\"I got user details now\")\n    } catch (error) {\n        dispatch({type: USER_DETAILS_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    console.log(\"I am going to getUserDetails\")\n    try {\n        // Initiate request\n        dispatch({ type: USER_UPDATE_PROFILE_REQEUST })\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n        \n        // can I try useSelector here instead of getState? no, this is a function, not React Component\n        // that is why I have to use GetState to get more info\n        // Make real request to database\n        const {data} = await axios.put(`/api/users/profile`, user, {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload : data})\n        console.log(\"I got user UPDATE_PROFILE now\")\n    } catch (error) {\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    console.log(\"I am going to getUserDetails\")\n    try {\n        // Initiate request\n        dispatch({ type: USER_LIST_REQEUST })\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n        \n\n        const {data} = await axios.get(`/api/users`,{headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        dispatch({ type: USER_LIST_SUCCESS, payload : data})\n        console.log(\"I got user LIST now\")\n    } catch (error) {\n        dispatch({type: USER_LIST_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n// Register/Login/Update/Logout\n\nexport const deleteUsers = (id) => async (dispatch, getState) => {\n    console.log(\"I am going to getUserDetails\")\n    try {\n        // Initiate request\n        dispatch({ type: USER_DELETE_REQEUST })\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n        \n\n        await axios.delete(`/api/users/${id}`,{headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        dispatch({ type: USER_DELETE_SUCCESS})\n        console.log(\"I got user DELETE now\")\n    } catch (error) {\n        dispatch({type: USER_DELETE_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const updateUsers = (user) => async (dispatch, getState) => {\n    console.log(\"I am going to getUserDetails\")\n    try {\n        // Initiate request\n        dispatch({ type: USER_UPDATE_REQEUST })\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n        \n\n        const data = await axios.put(`/api/users/${user_id}`, user, {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        dispatch({ type: USER_UPDATE_SUCCESS})\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data})\n        console.log(\"I got user UPDATE now\")\n    } catch (error) {\n        dispatch({type: USER_UPDATE_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}"]},"metadata":{},"sourceType":"module"}
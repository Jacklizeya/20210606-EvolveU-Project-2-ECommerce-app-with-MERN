{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\";\nimport { listMyOrders } from \"../actions/orderAction\";\nimport FormContainer from \"../components/FormContainer\";\nimport { orderListMyReducer } from '../reducers/orderReducer';\nimport OrderScreen from './OrderScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileScreen({\n  location,\n  history\n}) {\n  _s();\n\n  //  This is going to focus on using local state\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null); // Check if use is logged in\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // This is the main global state for this component: userDetails\n\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  useEffect(() => {\n    console.log(\"the profile screen\");\n\n    if (!userInfo) {\n      console.log(\"unlogin status\");\n      history.push(\"/login\");\n    } // if the user did not login, then go to the main page\n    else {\n        console.log(\"login status\");\n\n        if (!user.name) {\n          console.log(\"there is nothing in userDetails.user.name after 1st login, I am going to get it now\");\n          dispatch(getUserDetails(\"profile\"));\n          dispatch(listMyOrders());\n        } // when we just login details is empty always, we need to initialize the details      \n        else {\n            console.log(\"after first login, I have all the information I need now, I am able to put the informaiton in\");\n            setName(user.name);\n            setEmail(user.email);\n          }\n      }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch(register(name, email, password))\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      // DISPATCH UPDATE PROFILE\n      dispatch(updateUserProfile({\n        name,\n        email,\n        password\n      })); // an object is passing\n    }\n  }; //  all stuff inside is the children\n\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" User Profile \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: [\" \", message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: [\" \", error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 31\n        }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"success\",\n          children: \" Profile updated \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Email Address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" password  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" confirm Password  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"confirmPassword\",\n            placeholder: \"Enter confirmPassword\",\n            value: confirmPassword,\n            onChange: e => {\n              setConfirmPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \" Update \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" My orders \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [\" \", errorOrders, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 59\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" ID \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" DATE \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" TOTAL \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" PAID \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" DELIVERED \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" DELIVERED \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order._id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.createdAt.substring(0, 10), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.totalPrice, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: \"red\"\n                  },\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 90\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", order.isDelivered ? order.derliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: \"red\"\n                  },\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 101\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(LinkContainer, {\n                  to: true,\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 42\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this)]\n            }, order._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"5nr9+I42y5Ud5BgKxMgrxcw12aQ=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Link","Table","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","listMyOrders","FormContainer","orderListMyReducer","OrderScreen","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","userLogin","state","userInfo","dispatch","userDetails","loading","error","user","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","console","log","push","submitHandler","e","preventDefault","target","value","map","order","_id","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","derliveredAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Table, Form, Button, Row, Col} from \"react-bootstrap\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport {getUserDetails, updateUserProfile} from \"../actions/userAction\"\nimport {listMyOrders} from \"../actions/orderAction\"\nimport FormContainer from \"../components/FormContainer\"\nimport { orderListMyReducer } from '../reducers/orderReducer'\nimport OrderScreen from './OrderScreen'\n\nexport default function ProfileScreen( {location, history} ) {\n//  This is going to focus on using local state\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(null)\n\n\n\n    // Check if use is logged in\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    // This is the main global state for this component: userDetails\n    const dispatch = useDispatch()\n    const userDetails = useSelector(state => state.userDetails)\n    const {loading, error, user} = userDetails\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const {loading: loadingOrders, error: errorOrders, orders} = orderListMy\n\n    useEffect(()=>{\n        console.log(\"the profile screen\")\n        if (!userInfo) {\n            console.log(\"unlogin status\")\n            history.push(\"/login\")}  // if the user did not login, then go to the main page\n        else { \n            console.log(\"login status\")\n            if(! user.name) {\n                console.log(\"there is nothing in userDetails.user.name after 1st login, I am going to get it now\"); \n                dispatch(getUserDetails(\"profile\"))\n                dispatch(listMyOrders())\n            }  // when we just login details is empty always, we need to initialize the details      \n            else {\n                console.log(\"after first login, I have all the information I need now, I am able to put the informaiton in\")\n                setName(user.name); setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // dispatch(register(name, email, password))\n        if (password !== confirmPassword) {setMessage(\"Passwords do not match\")} else {\n            // DISPATCH UPDATE PROFILE\n            dispatch(updateUserProfile({name, email, password}))  // an object is passing\n        }\n    }\n\n//  all stuff inside is the children\n    return (\n        <Row>\n            <Col md={3}> \n                <h2> User Profile </h2>\n                <div>\n                    {message && <Message variant=\"danger\"> {message} </Message>}\n                    {error && <Message variant=\"danger\"> {error} </Message>}\n                    {success && <Message variant=\"success\"> Profile updated </Message>}\n                    {loading && <Loader/>}\n                </div>\n                \n                <Form onSubmit = {submitHandler} >\n\n                    <Form.Group controlId=\"name\">\n                        <Form.Label> Name </Form.Label>\n                        <Form.Control type=\"name\" placeholder=\"Enter name\" value={name} onChange={(e)=>{setName(e.target.value)}}/> \n                    </Form.Group> \n\n                    <Form.Group controlId=\"email\">\n                        <Form.Label> Email Address </Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>{setEmail(e.target.value)}}/> \n                    </Form.Group> \n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label> password  </Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter password\" value={password} onChange={(e)=>{setPassword(e.target.value)}}/> \n                    </Form.Group>  \n\n                    <Form.Group controlId=\"confirmPassword\">\n                        <Form.Label> confirm Password  </Form.Label>\n                        <Form.Control type=\"confirmPassword\" placeholder=\"Enter confirmPassword\" value={confirmPassword} onChange={(e)=>{setConfirmPassword(e.target.value)}}/> \n                    </Form.Group>\n\n                    <Button type=\"submit\" variant=\"primary\"> Update </Button>\n                </Form>\n            </Col>\n            <Col md={9}> \n                <h2> My orders </h2> \n                {loadingOrders? <Loader/> : errorOrders ? <Message variant=\"danger\"> {errorOrders} </Message> : (\n                    <Table striped bordered hover responsive className = \"table-sm\"> \n                        <thead> \n                            <tr>\n                                <th> ID </th>\n                                <th> DATE </th>\n                                <th> TOTAL </th>\n                                <th> PAID </th>\n                                <th> DELIVERED </th>\n                                <th> DELIVERED </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order)=>{return (\n                                <tr key={order._id}>\n                                    <td> {order._id} </td>\n                                    <td> {order.createdAt.substring(0, 10)} </td>\n                                    <td> {order.totalPrice} </td>\n                                    <td> {order.isPaid ? order.paidAt.substring(0, 10): (<i className=\"fas fa-times\" style={{color: \"red\"}}> </i>)} </td>\n                                    <td> {order.isDelivered ? order.derliveredAt.substring(0, 10): (<i className=\"fas fa-times\" style={{color: \"red\"}}> </i>)} </td>\n                                    <td> <LinkContainer to > </LinkContainer> </td>\n                                </tr> \n                            )})}               \n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
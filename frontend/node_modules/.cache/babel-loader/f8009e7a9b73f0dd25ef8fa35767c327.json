{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_REQEUST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQEUST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQEUST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQEUST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET } from \"../constants/userConstant\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_LOGIN_REQEUST\n    }); // Make real request to database\n\n    const {\n      data\n    } = await axios.post(\"api/users/login\", {\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"UserInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_REGISTER_REQEUST\n    }); // Make real request to database\n\n    const {\n      data\n    } = await axios.post(\"api/users\", {\n      name,\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"UserInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //  get User Details, go to api/users/profile\n\nexport const getUserDetails = inputInfo => async (dispatch, getState) => {\n  console.log(\"I am going to getUserDetails\");\n\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_DETAILS_REQEUST\n    }); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // can I try useSelector here instead of getState? no, this is a function, not React Component\n    // that is why I have to use GetState to get more info\n    // Make real request to database\n\n    const {\n      data\n    } = await axios.get(`api/users/${inputInfo}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    console.log(\"I got user details now\");\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = inputInfo => async (dispatch, getState) => {\n  console.log(\"I am going to getUserDetails\");\n\n  try {\n    // Initiate request\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQEUST\n    }); // This is double destruction\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // can I try useSelector here instead of getState? no, this is a function, not React Component\n    // that is why I have to use GetState to get more info\n    // Make real request to database\n\n    const {\n      data\n    } = await axios.put(`api/users/{}}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    console.log(\"I got user UPDATE_PROFILE now\");\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Register/Login/Update/Logout","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/actions/userAction.js"],"names":["axios","USER_LOGIN_REQEUST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQEUST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQEUST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQEUST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","login","email","password","dispatch","type","data","post","headers","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","inputInfo","getState","console","log","userLogin","userInfo","get","token","updateUserProfile","put"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport {\n    USER_LOGIN_REQEUST, \n    USER_LOGIN_SUCCESS, \n    USER_LOGIN_FAIL, \n    USER_LOGOUT,\n    USER_REGISTER_REQEUST, \n    USER_REGISTER_SUCCESS, \n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQEUST, \n    USER_DETAILS_SUCCESS, \n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQEUST, \n    USER_UPDATE_PROFILE_SUCCESS, \n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET\n} from \"../constants/userConstant\" \n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        // Initiate request\n        dispatch({ type: USER_LOGIN_REQEUST })\n        // Make real request to database\n        const {data} = await axios.post(\"api/users/login\", {email, password}, {headers : {\"Content-Type\": \"application/json\"}} )\n        dispatch({ type: USER_LOGIN_SUCCESS, payload : data})\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data))\n    } catch (error) {\n        dispatch({type: USER_LOGIN_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const logout = ( ) => async (dispatch) => {\n    localStorage.removeItem(\"userInfo\")\n\n\n    dispatch({type: USER_LOGOUT})\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        // Initiate request\n        dispatch({ type: USER_REGISTER_REQEUST })\n        // Make real request to database\n        const {data} = await axios.post(\"api/users\", {name, email, password}, {headers : {\"Content-Type\": \"application/json\"}} )\n        dispatch({ type: USER_REGISTER_SUCCESS, payload : data})\n        dispatch({ type: USER_LOGIN_SUCCESS, payload : data})\n        localStorage.setItem(\"UserInfo\", JSON.stringify(data))\n    } catch (error) {\n        dispatch({type: USER_REGISTER_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\n//  get User Details, go to api/users/profile\nexport const getUserDetails = (inputInfo) => async (dispatch, getState) => {\n    console.log(\"I am going to getUserDetails\")\n    try {\n        // Initiate request\n        dispatch({ type: USER_DETAILS_REQEUST })\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n        // can I try useSelector here instead of getState? no, this is a function, not React Component\n        // that is why I have to use GetState to get more info\n        // Make real request to database\n        const {data} = await axios.get(`api/users/${inputInfo}`, {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        dispatch({ type: USER_DETAILS_SUCCESS, payload : data})\n        console.log(\"I got user details now\")\n    } catch (error) {\n        dispatch({type: USER_DETAILS_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\n\nexport const updateUserProfile = (inputInfo) => async (dispatch, getState) => {\n    console.log(\"I am going to getUserDetails\")\n    try {\n        // Initiate request\n        dispatch({ type: USER_UPDATE_PROFILE_REQEUST })\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n        // can I try useSelector here instead of getState? no, this is a function, not React Component\n        // that is why I have to use GetState to get more info\n        // Make real request to database\n        const {data} = await axios.put(`api/users/{}}`, {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload : data})\n        console.log(\"I got user UPDATE_PROFILE now\")\n    } catch (error) {\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\n// Register/Login/Update/Logout"]},"metadata":{},"sourceType":"module"}
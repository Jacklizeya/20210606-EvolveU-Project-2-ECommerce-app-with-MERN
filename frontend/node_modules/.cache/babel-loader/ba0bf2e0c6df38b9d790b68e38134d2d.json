{"ast":null,"code":"var _jsxFileName = \"C:\\\\DATA\\\\EvolveU\\\\PROJECT II\\\\Project2ECommerce\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProductDetails, updateProduct } from \"../actions/productAction\";\nimport FormContainer from \"../components/FormContainer\";\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductEditScreen({\n  match,\n  history\n}) {\n  _s();\n\n  //  This is going to focus on using local state\n  const productId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false); // This is the main global state for this component: productDetails\n\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate; // const productUpdate = useSelector(state => state.productUpdate)\n  // const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = productUpdate\n  // console.log(\"product\", product)\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n        console.log(\"useEffect\", product);\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, dispatch, history, productId, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  }; //  all stuff inside is the children\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \" Go Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Edit Product \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 18\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [\" \", errorUpdate, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 27\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [\" \", error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 56\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Price \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => {\n              setPrice(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Image \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter image URL\",\n            value: image,\n            onChange: e => {\n              setImage(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Brand \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => {\n              setBrand(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Category \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => {\n              setCategory(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Count In Stock \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => {\n              setCountInStock(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: description,\n            onChange: e => {\n              setDescription(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \" Update \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductEditScreen, \"TPFKgDYrJjZIm/ZzvXWaTocM+xs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["C:/DATA/EvolveU/PROJECT II/Project2ECommerce/frontend/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","listProductDetails","updateProduct","FormContainer","PRODUCT_UPDATE_RESET","axios","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","console","log","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,kBAAR,EAA4BC,aAA5B,QAAgD,0BAAhD;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,iBAAT,CAA4B;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAA5B,EAA+C;AAAA;;AAC9D;AACI,QAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA/B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC8B,YAAD,EAAeC,eAAf,IAAkC/B,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACgC,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAC,KAAD,CAA1C,CAX0D,CAc1D;;AACA,QAAMoC,QAAQ,GAAG/B,WAAW,EAA5B;AACA,QAAMgC,cAAc,GAAG/B,WAAW,CAACgC,KAAK,IAAIA,KAAK,CAACD,cAAhB,CAAlC;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA4BJ,cAAlC;AAEA,QAAMK,aAAa,GAAGpC,WAAW,CAACgC,KAAK,IAAIA,KAAK,CAACI,aAAhB,CAAjC;AACA,QAAM;AAACH,IAAAA,OAAO,EAAEI,aAAV;AAAyBH,IAAAA,KAAK,EAAEI,WAAhC;AAA6CC,IAAAA,OAAO,EAAEC;AAAtD,MAAuEJ,aAA7E,CApB0D,CAsB1D;AACA;AACA;;AAGAzC,EAAAA,SAAS,CAAC,MAAI;AACN,QAAI6C,aAAJ,EAAmB;AAACV,MAAAA,QAAQ,CAAC;AAACW,QAAAA,IAAI,EAAEnC;AAAP,OAAD,CAAR;AAAwCI,MAAAA,OAAO,CAACgC,IAAR,CAAa,oBAAb;AAAmC,KAA/F,MACA;AACA,UAAI,CAAEP,OAAO,CAACrB,IAAV,IAAkBqB,OAAO,CAACQ,GAAR,KAAgBhC,SAAtC,EACA;AAACmB,QAAAA,QAAQ,CAAC3B,kBAAkB,CAACQ,SAAD,CAAnB,CAAR;AAAyCiC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBV,OAAzB;AAAkC,OAD5E,MACkF;AAClFpB,QAAAA,OAAO,CAACoB,OAAO,CAACrB,IAAT,CAAP;AACAG,QAAAA,QAAQ,CAACkB,OAAO,CAACnB,KAAT,CAAR;AACAG,QAAAA,QAAQ,CAACgB,OAAO,CAACjB,KAAT,CAAR;AACAG,QAAAA,QAAQ,CAACc,OAAO,CAACf,KAAT,CAAR;AACAG,QAAAA,WAAW,CAACY,OAAO,CAACb,QAAT,CAAX;AACAG,QAAAA,eAAe,CAACU,OAAO,CAACX,YAAT,CAAf;AACAG,QAAAA,cAAc,CAACQ,OAAO,CAACT,WAAT,CAAd;AAAsC;AACrC;AACR,GAbQ,EAcP,CAACS,OAAD,EAAUL,QAAV,EAAoBpB,OAApB,EAA6BC,SAA7B,EAAwC6B,aAAxC,CAdO,CAAT;;AAiBA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAlB,IAAAA,QAAQ,CAAC1B,aAAa,CAClB;AAACuC,MAAAA,GAAG,EAAEhC,SAAN;AACAG,MAAAA,IADA;AAEAE,MAAAA,KAFA;AAGAE,MAAAA,KAHA;AAIAE,MAAAA,KAJA;AAKAE,MAAAA,QALA;AAMAI,MAAAA,WANA;AAOAF,MAAAA;AAPA,KADkB,CAAd,CAAR;AAWH,GAbD;;AAgBA,QAAMyB,iBAAiB,GAAG,MAAOF,CAAP,IAAa;AACnC,UAAMG,IAAI,GAAGH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBL,IAAzB;AACArB,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACA,YAAM2B,MAAM,GAAG;AAACC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAAV,OAAf;AACA,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAMnD,KAAK,CAACoD,IAAN,CAAW,aAAX,EAA0BN,QAA1B,EAAoCG,MAApC,CAArB;AACArC,MAAAA,QAAQ,CAAEuC,IAAF,CAAR;AACA7B,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALD,CAKE,OAAOK,KAAP,EAAc;AACZU,MAAAA,OAAO,CAACV,KAAR,CAAcA,KAAd;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAdD,CA5D0D,CA4E9D;;;AACI,sBAEI;AAAA,4BAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,oBAAV;AAA+B,MAAA,SAAS,EAAC,oBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,aAAD;AAAA,8BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,EAEKQ,aAAa,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFtB,EAGKC,WAAW,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,wBAA4BA,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHpB,EAIKL,OAAO,gBAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAF,GAAuBC,KAAK,gBAAG,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,wBAA4BA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAEpC,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAIY,aAAlB;AAAA,gCAEI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,YAAtC;AAAmD,YAAA,KAAK,EAAEhC,IAA1D;AAAgE,YAAA,QAAQ,EAAGiC,CAAD,IAAK;AAAChC,cAAAA,OAAO,CAACgC,CAAC,CAACI,MAAF,CAASS,KAAV,CAAP;AAAwB;AAAxG;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,QAAnB;AAA4B,YAAA,WAAW,EAAC,aAAxC;AAAsD,YAAA,KAAK,EAAE5C,KAA7D;AAAoE,YAAA,QAAQ,EAAG+B,CAAD,IAAK;AAAC9B,cAAAA,QAAQ,CAAC8B,CAAC,CAACI,MAAF,CAASS,KAAV,CAAR;AAAyB;AAA7G;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAYI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,iBAAtC;AAAwD,YAAA,KAAK,EAAE1C,KAA/D;AAAsE,YAAA,QAAQ,EAAG6B,CAAD,IAAK;AAAC5B,cAAAA,QAAQ,CAAC4B,CAAC,CAACI,MAAF,CAASS,KAAV,CAAR;AAAyB;AAA/G;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,EAAE,EAAC,YAAd;AAA2B,YAAA,KAAK,EAAC,aAAjC;AAA+C,YAAA,MAAM,MAArD;AAAsD,YAAA,QAAQ,EAAEX;AAAhE;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAIKrB,SAAS,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAmBI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,aAAtC;AAAoD,YAAA,KAAK,EAAER,KAA3D;AAAkE,YAAA,QAAQ,EAAG2B,CAAD,IAAK;AAAC1B,cAAAA,QAAQ,CAAC0B,CAAC,CAACI,MAAF,CAASS,KAAV,CAAR;AAAyB;AAA3G;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAwBI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,UAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,gBAAtC;AAAuD,YAAA,KAAK,EAAEtC,QAA9D;AAAwE,YAAA,QAAQ,EAAGyB,CAAD,IAAK;AAACxB,cAAAA,WAAW,CAACwB,CAAC,CAACI,MAAF,CAASS,KAAV,CAAX;AAA4B;AAApH;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eA6BI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,cAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,QAAnB;AAA4B,YAAA,WAAW,EAAC,oBAAxC;AAA6D,YAAA,KAAK,EAAEpC,YAApE;AAAkF,YAAA,QAAQ,EAAGuB,CAAD,IAAK;AAACtB,cAAAA,eAAe,CAACsB,CAAC,CAACI,MAAF,CAASS,KAAV,CAAf;AAAgC;AAAlI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BJ,eAkCI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,aAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,aAAtC;AAAoD,YAAA,KAAK,EAAElC,WAA3D;AAAwE,YAAA,QAAQ,EAAGqB,CAAD,IAAK;AAACpB,cAAAA,cAAc,CAACoB,CAAC,CAACI,MAAF,CAASS,KAAV,CAAd;AAA+B;AAAvH;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCJ,eAuCI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA4DH;;GAzIuBpD,iB;UAeHT,W,EACMC,W,EAGDA,W;;;KAnBFQ,iB","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {Form, Button} from \"react-bootstrap\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {listProductDetails, updateProduct} from \"../actions/productAction\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport axios from \"axios\"\r\n\r\n\r\nexport default function ProductEditScreen( {match, history} ) {\r\n//  This is going to focus on using local state\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState(\"\")\r\n    const [brand, setBrand] = useState(\"\")\r\n    const [category, setCategory] = useState(\"\")\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState(\"\")\r\n    const [uploading, setUploading] = useState(false)\r\n     \r\n\r\n    // This is the main global state for this component: productDetails\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = productUpdate\r\n\r\n    // const productUpdate = useSelector(state => state.productUpdate)\r\n    // const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = productUpdate\r\n    // console.log(\"product\", product)\r\n    \r\n\r\n    useEffect(()=>{\r\n            if (successUpdate) {dispatch({type: PRODUCT_UPDATE_RESET}); history.push(\"/admin/productlist\")} else \r\n            {\r\n            if (! product.name || product._id !== productId ) \r\n            {dispatch(listProductDetails(productId)); console.log(\"useEffect\", product)} else {\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)   \r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)  }\r\n            }\r\n    }\r\n    , [product, dispatch, history, productId, successUpdate])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()       \r\n        dispatch(updateProduct(\r\n            {_id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock    \r\n            } \r\n        ))\r\n    }\r\n\r\n    \r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append(\"image\", file)\r\n        setUploading(true)\r\n        try {\r\n            const config = {headers: {\"Content-Type\": \"multipart/form-data\"}}\r\n            const {data} = await axios.post(\"/api/upload\", formData, config)\r\n            setImage (data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n//  all stuff inside is the children\r\n    return (\r\n\r\n        <div>\r\n            \r\n            <Link to= \"/admin/productlist\" className=\"btn btn-light my-3\"> Go Back </Link>\r\n            <FormContainer>\r\n                 <h1> Edit Product </h1>\r\n                {loadingUpdate && <Loader> </Loader>}\r\n                {errorUpdate && <Message variant=\"danger\"> {errorUpdate} </Message>}\r\n                {loading? <Loader> </Loader> : error?( <Message variant=\"danger\"> {error} </Message>) :  (\r\n\r\n                <Form onSubmit = {submitHandler} >\r\n\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label> Name </Form.Label>\r\n                        <Form.Control type=\"name\" placeholder=\"Enter name\" value={name} onChange={(e)=>{setName(e.target.value)}}/> \r\n                    </Form.Group> \r\n\r\n                    <Form.Group controlId=\"price\">\r\n                        <Form.Label> Price </Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Enter price\" value={price} onChange={(e)=>{setPrice(e.target.value)}}/> \r\n                    </Form.Group> \r\n\r\n                    <Form.Group controlId=\"image\">\r\n                        <Form.Label> Image </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter image URL\" value={image} onChange={(e)=>{setImage(e.target.value)}}/> \r\n                        <Form.File id=\"image-file\" label=\"Choose File\" custom onChange={uploadFileHandler}/> \r\n                        {uploading && <Loader/>}\r\n                    </Form.Group> \r\n\r\n                    <Form.Group controlId=\"brand\">\r\n                        <Form.Label> Brand </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter brand\" value={brand} onChange={(e)=>{setBrand(e.target.value)}}/> \r\n                    </Form.Group> \r\n\r\n                    <Form.Group controlId=\"category\">\r\n                        <Form.Label> Category </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter category\" value={category} onChange={(e)=>{setCategory(e.target.value)}}/> \r\n                    </Form.Group> \r\n\r\n                    <Form.Group controlId=\"countInStock\">\r\n                        <Form.Label> Count In Stock </Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Enter countInStock\" value={countInStock} onChange={(e)=>{setCountInStock(e.target.value)}}/> \r\n                    </Form.Group> \r\n\r\n                    <Form.Group controlId=\"description\">\r\n                        <Form.Label> Description </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Description\" value={description} onChange={(e)=>{setDescription(e.target.value)}}/> \r\n                    </Form.Group> \r\n\r\n                    <Button type=\"submit\" variant=\"primary\"> Update </Button>\r\n                </Form>\r\n            )}\r\n            \r\n\r\n            \r\n             </FormContainer>\r\n        </div>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
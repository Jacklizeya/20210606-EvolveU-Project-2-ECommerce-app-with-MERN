{"ast":null,"code":"import _regeneratorRuntime from\"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/3d2021store/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/3d2021store/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL,ORDER_DETAILS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_FAIL,ORDER_PAY_REQUEST,ORDER_PAY_SUCCESS,ORDER_PAY_FAIL,ORDER_LIST_MY_REQUEST,ORDER_LIST_MY_SUCCESS,ORDER_LIST_MY_FAIL,ORDER_LIST_ALL_REQUEST,ORDER_LIST_ALL_SUCCESS,ORDER_LIST_ALL_FAIL,ORDER_DELIVER_REQUEST,ORDER_DELIVER_SUCCESS,ORDER_DELIVER_FAIL}from\"../constants/orderConstants\";import axios from\"axios\";export var createOrder=function createOrder(order){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var _getState,userInfo,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"Entering Thunk\");_context.prev=1;// Initiate request\nconsole.log(\"entering the try path\");dispatch({type:ORDER_CREATE_REQUEST});console.log(\"1st dispatch sent\");// This is double destruction\n_getState=getState(),userInfo=_getState.userLogin.userInfo;console.log(\"userInfo\",userInfo);console.log(\"order is\",order);console.log(\"token\",userInfo.token);// can I try useSelector here instead of getState? no, this is a function, not React Component\n// that is why I have to use GetState to get more info\n// Make real request to database\n_context.next=11;return axios.post(\"/api/orders\",order,{headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(userInfo.token)}});case 11:_yield$axios$post=_context.sent;data=_yield$axios$post.data;console.log(\"reply from database\",data);dispatch({type:ORDER_CREATE_SUCCESS,payload:data});console.log(\"I updated Redux state\");_context.next=22;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](1);console.log(\"entering error path\");dispatch({type:ORDER_CREATE_FAIL,payload:_context.t0.response&&_context.t0.response.data.message?_context.t0.response.data.message:_context.t0.message});case 22:case\"end\":return _context.stop();}}},_callee,null,[[1,18]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var getOrderDetails=function getOrderDetails(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var _getState2,userInfo,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"Entering get Order details****\");_context2.prev=1;// Initiate request\nconsole.log(\"entering the try path of get order details\");dispatch({type:ORDER_DETAILS_REQUEST});console.log(\"1st dispatch sent\");// This is double destruction\n_getState2=getState(),userInfo=_getState2.userLogin.userInfo;// can I try useSelector here instead of getState? no, this is a function, not React Component\n// that is why I have to use GetState to get more info\n// Make real request to database\nconsole.log(\"/api/orders/\".concat(id));_context2.next=9;return axios.get(\"/api/orders/\".concat(id),{headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(userInfo.token)}});case 9:_yield$axios$get=_context2.sent;data=_yield$axios$get.data;console.log(\"reply from database get order detail by id\",data);dispatch({type:ORDER_DETAILS_SUCCESS,payload:data});console.log(\"I updated Redux state\");_context2.next=20;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](1);console.log(\"entering error path\");dispatch({type:ORDER_DETAILS_FAIL,payload:_context2.t0.response&&_context2.t0.response.data.message?_context2.t0.response.data.message:_context2.t0.message});case 20:case\"end\":return _context2.stop();}}},_callee2,null,[[1,16]]);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}();};export var payOrder=function payOrder(orderId,paymentResult){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var _getState3,userInfo,_yield$axios$put,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(\"Entering Pay Order\");_context3.prev=1;// Initiate request\nconsole.log(\"entering the try path\");dispatch({type:ORDER_PAY_REQUEST});console.log(\"1st dispatch sent\");// This is double destruction\n_getState3=getState(),userInfo=_getState3.userLogin.userInfo;// Update backend server record\n_context3.next=8;return axios.put(\"/api/orders/\".concat(orderId,\"/pay\"),paymentResult,{headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(userInfo.token)}});case 8:_yield$axios$put=_context3.sent;data=_yield$axios$put.data;console.log(\"reply from database\",data);dispatch({type:ORDER_PAY_SUCCESS,payload:data});console.log(\"I updated Redux state\");_context3.next=19;break;case 15:_context3.prev=15;_context3.t0=_context3[\"catch\"](1);console.log(\"entering error path\");dispatch({type:ORDER_PAY_FAIL,payload:_context3.t0.response&&_context3.t0.response.data.message?_context3.t0.response.data.message:_context3.t0.message});case 19:case\"end\":return _context3.stop();}}},_callee3,null,[[1,15]]);}));return function(_x5,_x6){return _ref3.apply(this,arguments);};}();};export var listMyOrders=function listMyOrders(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var _getState4,userInfo,_yield$axios$get2,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log(\"Entering Pay Order\");_context4.prev=1;// Initiate request\nconsole.log(\"entering the try path\");dispatch({type:ORDER_LIST_MY_REQUEST});console.log(\"1st dispatch sent\");// This is double destruction\n_getState4=getState(),userInfo=_getState4.userLogin.userInfo;// Update backend server record\n_context4.next=8;return axios.get(\"/api/orders/myorders\",{headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(userInfo.token)}});case 8:_yield$axios$get2=_context4.sent;data=_yield$axios$get2.data;console.log(\"reply from database\",data);dispatch({type:ORDER_LIST_MY_SUCCESS,payload:data});console.log(\"I updated Redux state\");_context4.next=19;break;case 15:_context4.prev=15;_context4.t0=_context4[\"catch\"](1);console.log(\"entering error path\");dispatch({type:ORDER_LIST_MY_FAIL,payload:_context4.t0.response&&_context4.t0.response.data.message?_context4.t0.response.data.message:_context4.t0.message});case 19:case\"end\":return _context4.stop();}}},_callee4,null,[[1,15]]);}));return function(_x7,_x8){return _ref4.apply(this,arguments);};}();};export var listAllOrders=function listAllOrders(){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch,getState){var _getState5,userInfo,_yield$axios$get3,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:console.log(\"Entering Pay Order\");_context5.prev=1;// Initiate request\nconsole.log(\"entering the try path\");dispatch({type:ORDER_LIST_ALL_REQUEST});console.log(\"1st dispatch sent\");// This is double destruction\n_getState5=getState(),userInfo=_getState5.userLogin.userInfo;// Update backend server record\n_context5.next=8;return axios.get('/api/orders',{headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(userInfo.token)}});case 8:_yield$axios$get3=_context5.sent;data=_yield$axios$get3.data;console.log(\"reply from database\",data);dispatch({type:ORDER_LIST_ALL_SUCCESS,payload:data});console.log(\"I updated Redux state\");_context5.next=19;break;case 15:_context5.prev=15;_context5.t0=_context5[\"catch\"](1);console.log(\"entering error path\");dispatch({type:ORDER_LIST_ALL_FAIL,payload:_context5.t0.response&&_context5.t0.response.data.message?_context5.t0.response.data.message:_context5.t0.message});case 19:case\"end\":return _context5.stop();}}},_callee5,null,[[1,15]]);}));return function(_x9,_x10){return _ref5.apply(this,arguments);};}();};export var deliverOrder=function deliverOrder(order){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch,getState){var _getState6,userInfo,_yield$axios$put2,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:console.log(\"Entering DELIVER Order\");_context6.prev=1;// Initiate request\nconsole.log(\"entering the try path\");dispatch({type:ORDER_DELIVER_REQUEST});console.log(\"1st dispatch sent\");// This is double destruction\n_getState6=getState(),userInfo=_getState6.userLogin.userInfo;// Update backend server record\nconsole.log(userInfo.token);_context6.next=9;return axios.put(\"/api/orders/\".concat(order._id,\"/deliver\"),{},{headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(userInfo.token)}});case 9:_yield$axios$put2=_context6.sent;data=_yield$axios$put2.data;console.log(\"reply from database\",data);dispatch({type:ORDER_DELIVER_SUCCESS,payload:data});console.log(\"I updated Redux state\");_context6.next=20;break;case 16:_context6.prev=16;_context6.t0=_context6[\"catch\"](1);console.log(\"entering error path\");dispatch({type:ORDER_DELIVER_FAIL,payload:_context6.t0.response&&_context6.t0.response.data.message?_context6.t0.response.data.message:_context6.t0.message});case 20:case\"end\":return _context6.stop();}}},_callee6,null,[[1,16]]);}));return function(_x11,_x12){return _ref6.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/3d2021store/frontend/src/actions/orderAction.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_ALL_REQUEST","ORDER_LIST_ALL_SUCCESS","ORDER_LIST_ALL_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","axios","createOrder","order","dispatch","getState","console","log","type","userInfo","userLogin","token","post","headers","data","payload","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","listAllOrders","deliverOrder","_id"],"mappings":"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","sourcesContent":["import {\n    ORDER_CREATE_REQUEST, \n    ORDER_CREATE_SUCCESS, \n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST, \n    ORDER_DETAILS_SUCCESS, \n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST, \n    ORDER_PAY_SUCCESS, \n    ORDER_PAY_FAIL,\n     \n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL ,\n    ORDER_LIST_ALL_REQUEST,\n    ORDER_LIST_ALL_SUCCESS,\n    ORDER_LIST_ALL_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    \n} from \"../constants/orderConstants\"\n\nimport axios from \"axios\"\n              \nexport const createOrder = (order) => async (dispatch, getState) => {\n    console.log(\"Entering Thunk\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path\")    \n        dispatch({ type: ORDER_CREATE_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n        console.log(`userInfo`, userInfo)\n        console.log(\"order is\" , order)\n        console.log(\"token\", userInfo.token)\n        // can I try useSelector here instead of getState? no, this is a function, not React Component\n        // that is why I have to use GetState to get more info\n        // Make real request to database\n        const {data} = await axios.post(\"/api/orders\", order, {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"reply from database\", data)\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload : data})\n        console.log(\"I updated Redux state\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: ORDER_CREATE_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    console.log(\"Entering get Order details****\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path of get order details\")    \n        dispatch({ type: ORDER_DETAILS_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n       \n        // can I try useSelector here instead of getState? no, this is a function, not React Component\n        // that is why I have to use GetState to get more info\n        // Make real request to database\n        console.log(`/api/orders/${id}`)\n        const {data} = await axios.get(`/api/orders/${id}` , {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"reply from database get order detail by id\", data)\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload : data})\n        console.log(\"I updated Redux state\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: ORDER_DETAILS_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    console.log(\"Entering Pay Order\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path\")    \n        dispatch({ type: ORDER_PAY_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n       \n        // Update backend server record\n        const {data} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult , {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"reply from database\", data)\n        dispatch({ type: ORDER_PAY_SUCCESS, payload : data})\n        console.log(\"I updated Redux state\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: ORDER_PAY_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    console.log(\"Entering Pay Order\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path\")    \n        dispatch({ type: ORDER_LIST_MY_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n       \n        // Update backend server record\n        const {data} = await axios.get(\"/api/orders/myorders\", {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"reply from database\", data)\n        dispatch({ type: ORDER_LIST_MY_SUCCESS, payload : data})\n        console.log(\"I updated Redux state\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: ORDER_LIST_MY_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const listAllOrders = () => async (dispatch, getState) => {\n    console.log(\"Entering Pay Order\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path\")    \n        dispatch({ type: ORDER_LIST_ALL_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n       \n        // Update backend server record\n        const {data} = await axios.get('/api/orders', {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"reply from database\", data)\n        dispatch({ type: ORDER_LIST_ALL_SUCCESS, payload : data})\n        console.log(\"I updated Redux state\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: ORDER_LIST_ALL_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    console.log(\"Entering DELIVER Order\")\n    try {\n        // Initiate request\n        console.log(\"entering the try path\")    \n        dispatch({ type: ORDER_DELIVER_REQUEST })\n        console.log(\"1st dispatch sent\")\n        // This is double destruction\n        const  {userLogin: {userInfo}} = getState() \n       \n        // Update backend server record\n        console.log(userInfo.token)\n        const {data} = await axios.put(`/api/orders/${order._id}/deliver`, {}, {headers : {\"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${userInfo.token}`}} )\n        console.log(\"reply from database\", data)\n        dispatch({ type: ORDER_DELIVER_SUCCESS, payload : data})\n        console.log(\"I updated Redux state\")\n    } catch (error) {\n        console.log(\"entering error path\")\n        dispatch({type: ORDER_DELIVER_FAIL, payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message})\n    }\n}"]},"metadata":{},"sourceType":"module"}
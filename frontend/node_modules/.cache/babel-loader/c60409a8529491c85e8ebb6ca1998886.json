{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET } from \"../constants/orderConstants\";\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      {\n        console.log(\"create request\");\n        return {\n          loading: true\n        };\n      }\n\n    case ORDER_CREATE_SUCCESS:\n      {\n        return {\n          order: action.payload,\n          loading: false,\n          success: true\n        };\n      }\n\n    case ORDER_CREATE_FAIL:\n      {\n        return {\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //* What is the best practise to design the initial point ??? */\n\nexport const orderDetailsReducer = (state = {\n  orderItems: [],\n  shippingAddress: {},\n  loading: true\n}, action) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      {\n        console.log(\"DETAILS request\");\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case ORDER_DETAILS_SUCCESS:\n      {\n        return {\n          order: action.payload,\n          loading: false\n        };\n      }\n\n    case ORDER_DETAILS_FAIL:\n      {\n        return {\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      {\n        console.log(\"PAY request\");\n        return {\n          loading: true\n        };\n      }\n\n    case ORDER_PAY_SUCCESS:\n      {\n        return {\n          loading: false,\n          success: true\n        };\n      }\n\n    case ORDER_PAY_FAIL:\n      {\n        return {\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    case ORDER_PAY_RESET:\n      {\n        return {};\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/reducers/orderReducer.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","orderCreateReducer","state","action","type","console","log","loading","order","payload","success","error","orderDetailsReducer","orderItems","shippingAddress","orderPayReducer"],"mappings":"AAAA,SACQA,oBADR,EAEQC,oBAFR,EAGQC,iBAHR,EAIQC,qBAJR,EAKQC,qBALR,EAMQC,kBANR,EAOQC,iBAPR,EAQQC,iBARR,EASQC,cATR,EAUQC,eAVR,QAWW,6BAXX;AAaA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAcC,MAAd,KAAyB;AACvD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,oBAAL;AAA+B;AAC3Bc,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,eAAO;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAP;AACH;;AACD,SAAKf,oBAAL;AAA4B;AACxB,eAAO;AAAEgB,UAAAA,KAAK,EAAEL,MAAM,CAACM,OAAhB;AAAyBF,UAAAA,OAAO,EAAE,KAAlC;AAA0CG,UAAAA,OAAO,EAAE;AAAnD,SAAP;AACH;;AACD,SAAKjB,iBAAL;AAAyB;AACrB,eAAO;AAACc,UAAAA,OAAO,EAAE,KAAV;AAAiBI,UAAAA,KAAK,EAAER,MAAM,CAACM;AAA/B,SAAP;AACH;;AACD;AAAS,aAAOP,KAAP;AAXb;AAaH,CAdM,C,CAgBP;;AACA,OAAO,MAAMU,mBAAmB,GAAG,CAACV,KAAK,GAAG;AAACW,EAAAA,UAAU,EAAE,EAAb;AAAiBC,EAAAA,eAAe,EAAE,EAAlC;AAAsCP,EAAAA,OAAO,EAAE;AAA/C,CAAT,EAAgEJ,MAAhE,KAA2E;AAC1G,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,qBAAL;AAAgC;AAC5BW,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,eAAO,EAAC,GAAGJ,KAAJ;AAAWK,UAAAA,OAAO,EAAE;AAApB,SAAP;AACH;;AACD,SAAKZ,qBAAL;AAA6B;AACzB,eAAO;AAAEa,UAAAA,KAAK,EAAEL,MAAM,CAACM,OAAhB;AAAyBF,UAAAA,OAAO,EAAE;AAAlC,SAAP;AACH;;AACD,SAAKX,kBAAL;AAA0B;AACtB,eAAO;AAACW,UAAAA,OAAO,EAAE,KAAV;AAAiBI,UAAAA,KAAK,EAAER,MAAM,CAACM;AAA/B,SAAP;AACH;;AACD;AAAS,aAAOP,KAAP;AAXb;AAaH,CAdM;AAgBP,OAAO,MAAMa,eAAe,GAAG,CAACb,KAAK,GAAG,EAAT,EAAcC,MAAd,KAAyB;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,iBAAL;AAA4B;AACxBQ,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,eAAO;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAP;AACH;;AACD,SAAKT,iBAAL;AAAyB;AACrB,eAAO;AAAES,UAAAA,OAAO,EAAE,KAAX;AACGG,UAAAA,OAAO,EAAE;AADZ,SAAP;AAGH;;AACD,SAAKX,cAAL;AAAsB;AAClB,eAAO;AAACQ,UAAAA,OAAO,EAAE,KAAV;AAAiBI,UAAAA,KAAK,EAAER,MAAM,CAACM;AAA/B,SAAP;AACH;;AACD,SAAKT,eAAL;AAAuB;AACnB,eAAO,EAAP;AACH;;AACD;AAAS,aAAOE,KAAP;AAhBb;AAkBH,CAnBM","sourcesContent":["import {\n        ORDER_CREATE_REQUEST, \n        ORDER_CREATE_SUCCESS, \n        ORDER_CREATE_FAIL,\n        ORDER_DETAILS_REQUEST, \n        ORDER_DETAILS_SUCCESS, \n        ORDER_DETAILS_FAIL,\n        ORDER_PAY_REQUEST, \n        ORDER_PAY_SUCCESS, \n        ORDER_PAY_FAIL,\n        ORDER_PAY_RESET\n    } from \"../constants/orderConstants\"\n\nexport const orderCreateReducer = (state = {} , action) => {\n    switch(action.type) {\n        case ORDER_CREATE_REQUEST    : {\n            console.log(\"create request\")\n            return {loading: true}\n        }\n        case ORDER_CREATE_SUCCESS : {\n            return { order: action.payload, loading: false , success: true}\n        }\n        case ORDER_CREATE_FAIL : {\n            return {loading: false, error: action.payload}\n        }       \n        default: return state\n    }\n}\n\n//* What is the best practise to design the initial point ??? */\nexport const orderDetailsReducer = (state = {orderItems: [], shippingAddress: {}, loading: true} , action) => {\n    switch(action.type) {\n        case ORDER_DETAILS_REQUEST    : {\n            console.log(\"DETAILS request\")\n            return {...state, loading: true}\n        }\n        case ORDER_DETAILS_SUCCESS : {\n            return { order: action.payload, loading: false }\n        }\n        case ORDER_DETAILS_FAIL : {\n            return {loading: false, error: action.payload}\n        }       \n        default: return state\n    }\n}\n\nexport const orderPayReducer = (state = {} , action) => {\n    switch(action.type) {\n        case ORDER_PAY_REQUEST    : {\n            console.log(\"PAY request\")\n            return { loading: true}\n        }\n        case ORDER_PAY_SUCCESS : {\n            return { loading: false,\n                      success: true\n            }\n        }\n        case ORDER_PAY_FAIL : {\n            return {loading: false, error: action.payload}\n        }       \n        case ORDER_PAY_RESET : {\n            return { }\n        }  \n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}
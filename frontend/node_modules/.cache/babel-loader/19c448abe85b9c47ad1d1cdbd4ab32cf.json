{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PaypalButton } from \"react-paypal-button-v2\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\";\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlaceOrderScreen({\n  match\n}) {\n  _s();\n\n  const orderId = match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const {\n    order,\n    loading,\n    error\n  } = useSelector(state => state.orderDetails);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = useSelector(state => state.orderDetails);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      console.log(\"order screen paypal api\");\n      const {\n        \"data\": clientId\n      } = await axios(\"/api/config/paypal\"); // sdk is software development kit? Insert 3-rd party script into HTML\n\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.async = true;\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay) {\n      dispatch;\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [orderId, dispatch, successPay, order]);\n\n  const successPaymentHanlder = paymentResult => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems.reduce((acc, item) => {\n      return Number(acc + item.price * item.qty);\n    }, 0);\n    order.shippingPrice = order.itemsPrice < 1000 ? Number((order.itemsPrice * 0.1).toFixed(2)) : 0;\n  }\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 18\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    children: [\" \", error, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 46\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Order \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Shipping \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), order.user.name, /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `mailto:${order.user.email}`,\n            children: [\" \", order.user.email, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Address \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 41\n            }, this), order.shippingAddress.address, \", \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 66\n            }, this), order.shippingAddress.city, \",\", order.shippingAddress.postalCode, \",\", order.shippingAddress.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"success\",\n            children: [\" Delivered on \", order.deliveredAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: \" Not Delivered \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Payment Method \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Method: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 32\n            }, this), order.paymentMethod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n            children: [\" Paid on \", order.paidAt, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(Message, {\n            children: \" Not Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Order Items \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n            children: \" Your order is empty \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: order.orderItems.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 1,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 53\n                    }, this), item.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" x $\", item.price, \" = $\", (item.qty * item.price).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \" Order Summary \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" Items \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\" $\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" 10% Shipping Fee (free for items over $1000) \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\" $\", order.shippingPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" Tax \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\" $\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" Total \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\" $\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [loadingPay && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 56\n              }, this), !sdkReady ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 54\n              }, this) : /*#__PURE__*/_jsxDEV(PaypalButton, {\n                amount: order.totalPrice,\n                onSuccess: successPaymentHanlder,\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n} // this <Paypal Button> must have some built-in like onClick = talk to paypal server\n// Here we only need to know on Success, it is going to pass us the paymentresult\n\n_s(PlaceOrderScreen, \"b52xa5JxmbkCaaaDxUJHNAr/eUo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PlaceOrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaceOrderScreen\");","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/OrderScreen.js"],"names":["React","useState","useEffect","axios","Form","Button","Row","Col","ListGroup","Image","Card","Link","useDispatch","useSelector","PaypalButton","Loader","Message","getOrderDetails","payOrder","ORDER_PAY_RESET","PlaceOrderScreen","match","orderId","params","id","sdkReady","setSdkReady","order","loading","error","state","orderDetails","loadingPay","success","successPay","dispatch","addPayPalScript","console","log","clientId","script","document","createElement","type","async","src","onload","body","appendChild","isPaid","window","paypal","successPaymentHanlder","paymentResult","itemsPrice","orderItems","reduce","acc","item","Number","price","qty","shippingPrice","toFixed","_id","user","name","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","paidAt","length","map","index","image","product","taxPrice","totalPrice"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react'\nimport axios from \"axios\"\n\nimport {Form, Button, Row, Col, ListGroup, Image, Card} from \"react-bootstrap\"\nimport {Link} from \"react-router-dom\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {PaypalButton} from \"react-paypal-button-v2\"\n\nimport Loader from \"../components/Loader\"\nimport Message from \"../components/Message\"\nimport {getOrderDetails, payOrder} from \"../actions/orderAction\" \nimport {ORDER_PAY_RESET} from \"../constants/orderConstants\"\n\nexport default function PlaceOrderScreen({match}) {\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n    const {order, loading, error} = useSelector(state => state.orderDetails)\n    const { loading : loadingPay, success: successPay} = useSelector(state => state.orderDetails)\n    const dispatch = useDispatch()\n\n    useEffect(()=>{ \n        const addPayPalScript = async() => {\n            console.log(\"order screen paypal api\")\n            const {\"data\": clientId} = await axios(\"/api/config/paypal\")\n            \n            \n\n            // sdk is software development kit? Insert 3-rd party script into HTML\n            const script = document.createElement(\"script\")\n            script.type = \"text/javascript\"\n            script.async = true\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.onload = () => {setSdkReady(true)}\n            document.body.appendChild(script)\n\n        }\n        \n    if (!order || successPay) {\n        dispatch\n        dispatch(getOrderDetails(orderId))} else if (!order.isPaid) {if (!window.paypal) {addPayPalScript()} else {setSdkReady(true)}}\n    }  , [orderId, dispatch, successPay, order])\n    const successPaymentHanlder = (paymentResult) => {\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n\n    if (!loading && !error) {order.itemsPrice = order.orderItems.reduce((acc, item) => {return Number(acc + item.price * item.qty)}, 0)\n    order.shippingPrice = (order.itemsPrice < 1000 ? Number((order.itemsPrice * 0.1).toFixed(2)) : 0)}\n    \n\n\n    return (\n        loading? <Loader> </Loader> : error? <Message> {error} </Message> :\n        <div>\n        <h1> Order {order._id}</h1>\n            <Row>\n                    <Col md={8}>\n                        <ListGroup variant=\"flush\">\n                            <h2> Shipping </h2>\n                            <strong> Name: </strong> \n                            {order.user.name}\n                            <a href={`mailto:${order.user.email}`}> {order.user.email} </a>\n                            <p> \n                                Address <br/>\n                                {order.shippingAddress.address}, <br/>\n                                {order.shippingAddress.city},  \n                                {order.shippingAddress.postalCode}, \n                                {order.shippingAddress.country} \n                            </p>\n                            {order.isDelivered? <Message variant=\"success\"> Delivered on {order.deliveredAt}</Message> : \n                            <Message variant=\"danger\"> Not Delivered </Message>}\n            \n                        </ListGroup>\n\n                        <ListGroup>\n                            <h2> Payment Method </h2>\n                            <p><strong> Method: </strong> \n                            {order.paymentMethod}</p>\n                            {order.isPaid?   <Message> Paid on {order.paidAt} </Message>  :  <Message> Not Paid</Message>  }\n                           \n                        </ListGroup>            \n\n                        <ListGroup>\n                            <h2> Order Items </h2>\n                            {order.orderItems.length === 0 ? <Message> Your order is empty </Message> : (\n                                <ListGroup> \n                                    {order.orderItems.map((item, index)=>{return (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid />\n                                                </Col>\n                                                <Col >\n                                                    <Link to={`/product/${item.product}`}/>\n                                                    {item.name}\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col> \n                                            </Row>\n                                        </ListGroup.Item>\n                                    )})}\n                                </ListGroup>\n                            )}\n                        </ListGroup>   \n                    </Col>\n\n                    <Col md={4}>\n                        <Card>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h2> Order Summary </h2>\n                                </ListGroup.Item>\n                                \n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> Items </Col>\n                                        <Col> ${order.itemsPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            \n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> 10% Shipping Fee (free for items over $1000) </Col>\n                                        <Col> ${order.shippingPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> Tax </Col>\n                                        <Col> ${order.taxPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> Total </Col>\n                                        <Col> ${order.totalPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                {!order.isPaid && (\n                                    <ListGroup.Item>\n                                        {loadingPay && <Loader/>}\n                                        {!sdkReady ? <Loader/>  : (<PaypalButton amount={order.totalPrice} onSuccess = {successPaymentHanlder}> </PaypalButton>)}\n                                    </ListGroup.Item>\n                                    )}\n\n                            </ListGroup>                   \n                        </Card>                            \n                    </Col>\n                </Row>\n            </div>\n    )\n}\n\n// this <Paypal Button> must have some built-in like onClick = talk to paypal server\n// Here we only need to know on Success, it is going to pass us the paymentresult\n"]},"metadata":{},"sourceType":"module"}
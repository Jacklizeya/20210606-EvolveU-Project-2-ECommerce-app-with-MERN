{"ast":null,"code":"var _jsxFileName = \"/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Image, ListGroup, Card, Button } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport products from \"../products\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = ({\n  match\n}) => {\n  _s();\n\n  const [product, setProduct] = useState({}); //  There are lots of limitation to useEffect, 1st argument is function, cannot use Async there, have to define one, then invoke it\n  //  for axios, response.data is the one we want \n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      const {\n        data\n      } = await axios.get(`/api/products/{match.params.id}`);\n      setProduct(data);\n    };\n\n    fetchProduct();\n  }, []);\n  console.log(\"product\", products); // const product = products.find(product => product._id === match.params.id)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      classNmae: \"btn btn-light my-3\",\n      to: \"/\",\n      children: \" Go Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", product.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: $\", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\" \", product.price, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block\",\n                type: \"button\",\n                disabled: product.countInStock === 0,\n                children: \"Add to cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductScreen, \"OnBMBBW1eujrCtGfhhy9dINpwX0=\");\n\n_c = ProductScreen;\nexport default ProductScreen; // The match object in router case\n// import is more like file path\n// to is url\n// In react, when you talk about src, it means something in the public folder\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/home/jack/Desktop/Software Codebase/20210514 E-Commerce Version1/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Image","ListGroup","Card","Button","Rating","products","ProductScreen","match","product","setProduct","fetchProduct","data","axios","get","console","log","image","name","rating","numReviews","price","description","countInStock"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Row, Col, Image, ListGroup, Card, Button} from \"react-bootstrap\"\nimport Rating from \"../components/Rating\"\nimport products from \"../products\"\n\n\nconst ProductScreen = ({match}) => {\n    const [product, setProduct] = useState({})\n//  There are lots of limitation to useEffect, 1st argument is function, cannot use Async there, have to define one, then invoke it\n//  for axios, response.data is the one we want \n    useEffect( ()=> {\n        const fetchProduct = async () => {const {data} = await axios.get(`/api/products/{match.params.id}`); setProduct(data)}\n        fetchProduct();\n    }, [])\n    console.log(\"product\", products)\n\n    // const product = products.find(product => product._id === match.params.id)\n    \n    return (\n        \n        <div>\n            <Link classNmae = \"btn btn-light my-3\" to=\"/\"> Go Back </Link>\n            <Row>\n                <Col md={6}>\n                    <Image src={product.image} alt={product.name} fluid/>\n                </Col>\n\n                <Col md={3}>\n                    <ListGroup variant = \"flush\"> \n                        <ListGroup.Item>\n                            <h3> {product.name} </h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Price: ${product.price}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Description: ${product.description}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                \n                <Col md={3}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item> \n                                <Row>\n                                    <Col>\n                                        Price:\n                                    </Col>\n                                    <Col>\n                                        <strong> {product.price} </strong>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item> \n                                <Row>\n                                    <Col>\n                                        Status:\n                                    </Col>\n                                    <Col>\n                                        {product.countInStock > 0? \"In Stock\" : \"Out of Stock\"}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>                           \n                                <Button className= \"btn-block\" type=\"button\" disabled={product.countInStock === 0}>\n                                    Add to cart\n                                </Button> \n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n            \n            \n        </div>\n    )\n}\n\nexport default ProductScreen\n\n\n// The match object in router case\n// import is more like file path\n// to is url\n// In react, when you talk about src, it means something in the public folder"]},"metadata":{},"sourceType":"module"}